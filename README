How to get it:
----------------------

You can download the SpecParser code here:

http://github.com/vmurali/SpecParser/archives/master

You can also use git to download it using the following command:

$ git clone git://github.com/vmurali/SpecParser.git




How to compile it:
------------------------------

You need GHC (Haskell compiler), Perl and BSV in order to use the parser.

To create the SpecParser, type

$ ghc --make -outputdir build SpecParser.hs

This creates an executable SpecParser. You should set your path to contain this directory.

$ export PATH=$PATH:`pwd`

In order to clean the build

$ ./clean.sh





How to run it:
-----------------------

To get help:

$ SpecParser -h


To generate Bluespec code for the Spec files

$ SpecParser -s -t topModule -o outputDir File.spec

This will automatically compile all the dependencies etc into Bluespec


To generate BDN code for the Spec files

$ SpecParser -b -r refineModule1:refineModule2  -p +:path/to/lib/files -o outputDir -m tempFilesDir File.spec

This generates File_Bdn.spec. This has to be compiled again as a Spec in order to generate Bluespec code.

path/to/lib/files is essentially the path to "lib" directory supplied with the sources.


If source files are spread across multiple directory, use: -i includePath1:includePath2


The compiler is smart, it does compilation of dependent files only when necessary. To force recompilation, use: -f



Hiccups, if any:
-------------------------

If there are any bugs, they will be in the "lib" files
The Bluespec code generation phase has been tested reasonably. So this should work. The BDN has not been tested properly. So that might have bugs.



Examples:
-----------------

There is an "examples" folder to show the syntax in the source distribution
