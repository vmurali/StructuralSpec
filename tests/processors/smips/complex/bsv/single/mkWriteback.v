//
// Generated by Bluespec Compiler, version 2014.03.beta2 (build 33633, 2014-03-26)
//
// On Fri Nov 21 15:38:10 EST 2014
//
//
// Ports:
// Name                         I/O  size props
// wb_notFull_READ                O     1
// wbIndex_READ                   O     5
// wbIndex_EN_READ                O     1
// dataQ_deq_READ                 O     1
// regWrite_READ                  O    37
// regWrite_EN_READ               O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// wb_enq_WRITE                   I    38
// dataQ_notEmpty_WRITE           I     1
// dataQ_first_WRITE              I    32
// wb_enq_EN_WRITE                I     1
//
// Combinational paths from inputs to outputs:
//   dataQ_notEmpty_WRITE -> wb_notFull_READ
//   dataQ_notEmpty_WRITE -> dataQ_deq_READ
//   (dataQ_notEmpty_WRITE, dataQ_first_WRITE) -> regWrite_READ
//   dataQ_notEmpty_WRITE -> regWrite_EN_READ
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkWriteback(CLK,
		   RST_N,

		   wb_notFull_READ,

		   wb_enq_WRITE,
		   wb_enq_EN_WRITE,

		   wbIndex_READ,

		   wbIndex_EN_READ,

		   dataQ_notEmpty_WRITE,

		   dataQ_first_WRITE,

		   dataQ_deq_READ,

		   regWrite_READ,

		   regWrite_EN_READ);
  input  CLK;
  input  RST_N;

  // value method wb_notFull__read
  output wb_notFull_READ;

  // action method wb_enq_write
  input  [37 : 0] wb_enq_WRITE;
  input  wb_enq_EN_WRITE;

  // value method wbIndex__read
  output [4 : 0] wbIndex_READ;

  // value method wbIndex_en
  output wbIndex_EN_READ;

  // action method dataQ_notEmpty_write
  input  dataQ_notEmpty_WRITE;

  // action method dataQ_first_write
  input  [31 : 0] dataQ_first_WRITE;

  // value method dataQ_deq__read
  output dataQ_deq_READ;

  // value method regWrite__read
  output [36 : 0] regWrite_READ;

  // value method regWrite_en
  output regWrite_EN_READ;

  // signals for module outputs
  wire [36 : 0] regWrite_READ;
  wire [4 : 0] wbIndex_READ;
  wire dataQ_deq_READ, regWrite_EN_READ, wbIndex_EN_READ, wb_notFull_READ;

  // ports of submodule mod__dataQ__deq__dataLocal
  wire mod__dataQ__deq__dataLocal$IN_EN_WRITE,
       mod__dataQ__deq__dataLocal$OUT_READ;

  // ports of submodule mod__dataQ__first__dataLocal
  wire [31 : 0] mod__dataQ__first__dataLocal$IN_WRITE,
		mod__dataQ__first__dataLocal$OUT_READ;
  wire mod__dataQ__first__dataLocal$IN_EN_WRITE;

  // ports of submodule mod__dataQ__notEmpty__dataLocal
  wire mod__dataQ__notEmpty__dataLocal$IN_EN_WRITE,
       mod__dataQ__notEmpty__dataLocal$IN_WRITE,
       mod__dataQ__notEmpty__dataLocal$OUT_READ;

  // ports of submodule mod__regWrite__dataLocal
  wire [36 : 0] mod__regWrite__dataLocal$IN_WRITE,
		mod__regWrite__dataLocal$OUT_READ;
  wire mod__regWrite__dataLocal$IN_EN_WRITE;

  // ports of submodule mod__regWrite__enLocal
  wire mod__regWrite__enLocal$IN_EN_WRITE, mod__regWrite__enLocal$OUT_READ;

  // ports of submodule mod__wbIndex__dataLocal
  wire [4 : 0] mod__wbIndex__dataLocal$IN_WRITE,
	       mod__wbIndex__dataLocal$OUT_READ;
  wire mod__wbIndex__dataLocal$IN_EN_WRITE;

  // ports of submodule mod__wbIndex__enLocal
  wire mod__wbIndex__enLocal$IN_EN_WRITE, mod__wbIndex__enLocal$OUT_READ;

  // ports of submodule mod__wb__enq__dataLocal
  wire [37 : 0] mod__wb__enq__dataLocal$IN_WRITE,
		mod__wb__enq__dataLocal$OUT_READ;
  wire mod__wb__enq__dataLocal$IN_EN_WRITE;

  // ports of submodule mod__wb__enq__enLocal
  wire mod__wb__enq__enLocal$IN_EN_WRITE, mod__wb__enq__enLocal$OUT_READ;

  // ports of submodule mod__wb__notFull__dataLocal
  wire mod__wb__notFull__dataLocal$IN_EN_WRITE,
       mod__wb__notFull__dataLocal$IN_WRITE,
       mod__wb__notFull__dataLocal$OUT_READ;

  // ports of submodule wbQ_mod__f_head
  wire wbQ_mod__f_head$IN_EN_WRITE;

  // ports of submodule wbQ_mod__f_mod__clear__dataLocal
  wire wbQ_mod__f_mod__clear__dataLocal$IN_EN_WRITE,
       wbQ_mod__f_mod__clear__dataLocal$OUT_READ;

  // ports of submodule wbQ_mod__f_mod__deq__data__0_dataLocal
  wire [37 : 0] wbQ_mod__f_mod__deq__data__0_dataLocal$IN_WRITE,
		wbQ_mod__f_mod__deq__data__0_dataLocal$OUT_READ;
  wire wbQ_mod__f_mod__deq__data__0_dataLocal$IN_EN_WRITE;

  // ports of submodule wbQ_mod__f_mod__deq__data__0_enLocal
  wire wbQ_mod__f_mod__deq__data__0_enLocal$IN_EN_WRITE;

  // ports of submodule wbQ_mod__f_mod__deq__numDeqs__dataLocal
  wire wbQ_mod__f_mod__deq__numDeqs__dataLocal$IN_EN_WRITE,
       wbQ_mod__f_mod__deq__numDeqs__dataLocal$IN_WRITE,
       wbQ_mod__f_mod__deq__numDeqs__dataLocal$OUT_READ;

  // ports of submodule wbQ_mod__f_mod__deq__numDeqs__enLocal
  wire wbQ_mod__f_mod__deq__numDeqs__enLocal$IN_EN_WRITE,
       wbQ_mod__f_mod__deq__numDeqs__enLocal$OUT_READ;

  // ports of submodule wbQ_mod__f_mod__deq__numFilledSlots__dataLocal
  wire wbQ_mod__f_mod__deq__numFilledSlots__dataLocal$IN_EN_WRITE,
       wbQ_mod__f_mod__deq__numFilledSlots__dataLocal$IN_WRITE,
       wbQ_mod__f_mod__deq__numFilledSlots__dataLocal$OUT_READ;

  // ports of submodule wbQ_mod__f_mod__enq__data__0_dataLocal
  wire [37 : 0] wbQ_mod__f_mod__enq__data__0_dataLocal$IN_WRITE,
		wbQ_mod__f_mod__enq__data__0_dataLocal$OUT_READ;
  wire wbQ_mod__f_mod__enq__data__0_dataLocal$IN_EN_WRITE;

  // ports of submodule wbQ_mod__f_mod__enq__data__0_enLocal
  wire wbQ_mod__f_mod__enq__data__0_enLocal$IN_EN_WRITE,
       wbQ_mod__f_mod__enq__data__0_enLocal$OUT_READ;

  // ports of submodule wbQ_mod__f_mod__enq__numFreeSlots__dataLocal
  wire wbQ_mod__f_mod__enq__numFreeSlots__dataLocal$IN_EN_WRITE,
       wbQ_mod__f_mod__enq__numFreeSlots__dataLocal$IN_WRITE,
       wbQ_mod__f_mod__enq__numFreeSlots__dataLocal$OUT_READ;

  // ports of submodule wbQ_mod__f_numElems
  wire wbQ_mod__f_numElems$IN_EN_WRITE,
       wbQ_mod__f_numElems$IN_WRITE,
       wbQ_mod__f_numElems$OUT_READ;

  // ports of submodule wbQ_mod__f_rf_mod__mod__read__0_req__dataLocal
  wire wbQ_mod__f_rf_mod__mod__read__0_req__dataLocal$IN_EN_WRITE;

  // ports of submodule wbQ_mod__f_rf_mod__mod__read__0_req__enLocal
  wire wbQ_mod__f_rf_mod__mod__read__0_req__enLocal$IN_EN_WRITE;

  // ports of submodule wbQ_mod__f_rf_mod__mod__read__0_resp__dataLocal
  wire [37 : 0] wbQ_mod__f_rf_mod__mod__read__0_resp__dataLocal$IN_WRITE,
		wbQ_mod__f_rf_mod__mod__read__0_resp__dataLocal$OUT_READ;
  wire wbQ_mod__f_rf_mod__mod__read__0_resp__dataLocal$IN_EN_WRITE;

  // ports of submodule wbQ_mod__f_rf_mod__mod__write__0_dataLocal
  wire [37 : 0] wbQ_mod__f_rf_mod__mod__write__0_dataLocal$IN_WRITE,
		wbQ_mod__f_rf_mod__mod__write__0_dataLocal$OUT_READ;
  wire wbQ_mod__f_rf_mod__mod__write__0_dataLocal$IN_EN_WRITE;

  // ports of submodule wbQ_mod__f_rf_mod__mod__write__0_enLocal
  wire wbQ_mod__f_rf_mod__mod__write__0_enLocal$IN_EN_WRITE,
       wbQ_mod__f_rf_mod__mod__write__0_enLocal$OUT_READ;

  // ports of submodule wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_req__dataLocal
  wire wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_req__dataLocal$IN_EN_WRITE;

  // ports of submodule wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_req__enLocal
  wire wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_req__enLocal$IN_EN_WRITE;

  // ports of submodule wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal
  wire [37 : 0] wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal$IN_WRITE,
		wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal$OUT_READ;
  wire wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal$IN_EN_WRITE;

  // ports of submodule wbQ_mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal
  wire [37 : 0] wbQ_mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal$IN_WRITE,
		wbQ_mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal$OUT_READ;
  wire wbQ_mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal$IN_EN_WRITE;

  // ports of submodule wbQ_mod__f_rf_mod__rf_0_0_mod__write__0_enLocal
  wire wbQ_mod__f_rf_mod__rf_0_0_mod__write__0_enLocal$IN_EN_WRITE,
       wbQ_mod__f_rf_mod__rf_0_0_mod__write__0_enLocal$OUT_READ;

  // ports of submodule wbQ_mod__f_rf_mod__rf_0_0_rf
  wire [37 : 0] wbQ_mod__f_rf_mod__rf_0_0_rf$READ_RESP_READ,
		wbQ_mod__f_rf_mod__rf_0_0_rf$WRITE_DATA_WRITE;
  wire wbQ_mod__f_rf_mod__rf_0_0_rf$WRITE_EN_WRITE;

  // ports of submodule wbQ_mod__f_rf_mod__whichReg
  wire wbQ_mod__f_rf_mod__whichReg$IN_EN_WRITE;

  // ports of submodule wbQ_mod__f_tail
  wire wbQ_mod__f_tail$IN_EN_WRITE;

  // ports of submodule wbQ_mod__mod__deq__deq__dataLocal
  wire wbQ_mod__mod__deq__deq__dataLocal$IN_EN_WRITE,
       wbQ_mod__mod__deq__deq__dataLocal$OUT_READ;

  // ports of submodule wbQ_mod__mod__deq__first__dataLocal
  wire [37 : 0] wbQ_mod__mod__deq__first__dataLocal$IN_WRITE,
		wbQ_mod__mod__deq__first__dataLocal$OUT_READ;
  wire wbQ_mod__mod__deq__first__dataLocal$IN_EN_WRITE;

  // ports of submodule wbQ_mod__mod__deq__notEmpty__dataLocal
  wire wbQ_mod__mod__deq__notEmpty__dataLocal$IN_EN_WRITE,
       wbQ_mod__mod__deq__notEmpty__dataLocal$IN_WRITE,
       wbQ_mod__mod__deq__notEmpty__dataLocal$OUT_READ;

  // ports of submodule wbQ_mod__mod__enq__enq__dataLocal
  wire [37 : 0] wbQ_mod__mod__enq__enq__dataLocal$IN_WRITE,
		wbQ_mod__mod__enq__enq__dataLocal$OUT_READ;
  wire wbQ_mod__mod__enq__enq__dataLocal$IN_EN_WRITE;

  // ports of submodule wbQ_mod__mod__enq__enq__enLocal
  wire wbQ_mod__mod__enq__enq__enLocal$IN_EN_WRITE,
       wbQ_mod__mod__enq__enq__enLocal$OUT_READ;

  // ports of submodule wbQ_mod__mod__enq__notFull__dataLocal
  wire wbQ_mod__mod__enq__notFull__dataLocal$IN_EN_WRITE,
       wbQ_mod__mod__enq__notFull__dataLocal$IN_WRITE,
       wbQ_mod__mod__enq__notFull__dataLocal$OUT_READ;

  // rule scheduling signals
  wire WILL_FIRE_RL_c1_1;

  // remaining internal signals
  wire _theResult_____1__h4859, x__h4338, y__h4903;

  // value method wb_notFull__read
  assign wb_notFull_READ = mod__wb__notFull__dataLocal$OUT_READ ;

  // value method wbIndex__read
  assign wbIndex_READ = mod__wbIndex__dataLocal$OUT_READ ;

  // value method wbIndex_en
  assign wbIndex_EN_READ = mod__wbIndex__enLocal$OUT_READ ;

  // value method dataQ_deq__read
  assign dataQ_deq_READ = mod__dataQ__deq__dataLocal$OUT_READ ;

  // value method regWrite__read
  assign regWrite_READ = mod__regWrite__dataLocal$OUT_READ ;

  // value method regWrite_en
  assign regWrite_EN_READ = mod__regWrite__enLocal$OUT_READ ;

  // submodule mod__dataQ__deq__dataLocal
  mkPulse mod__dataQ__deq__dataLocal(.IN_EN_WRITE(mod__dataQ__deq__dataLocal$IN_EN_WRITE),
				     .OUT_READ(mod__dataQ__deq__dataLocal$OUT_READ));

  // submodule mod__dataQ__first__dataLocal
  mkWire #( /*width*/ 32'd32) mod__dataQ__first__dataLocal(.IN_WRITE(mod__dataQ__first__dataLocal$IN_WRITE),
							   .IN_EN_WRITE(mod__dataQ__first__dataLocal$IN_EN_WRITE),
							   .OUT_READ(mod__dataQ__first__dataLocal$OUT_READ));

  // submodule mod__dataQ__notEmpty__dataLocal
  mkWire #( /*width*/ 32'd1) mod__dataQ__notEmpty__dataLocal(.IN_WRITE(mod__dataQ__notEmpty__dataLocal$IN_WRITE),
							     .IN_EN_WRITE(mod__dataQ__notEmpty__dataLocal$IN_EN_WRITE),
							     .OUT_READ(mod__dataQ__notEmpty__dataLocal$OUT_READ));

  // submodule mod__regWrite__dataLocal
  mkWire #( /*width*/ 32'd37) mod__regWrite__dataLocal(.IN_WRITE(mod__regWrite__dataLocal$IN_WRITE),
						       .IN_EN_WRITE(mod__regWrite__dataLocal$IN_EN_WRITE),
						       .OUT_READ(mod__regWrite__dataLocal$OUT_READ));

  // submodule mod__regWrite__enLocal
  mkPulse mod__regWrite__enLocal(.IN_EN_WRITE(mod__regWrite__enLocal$IN_EN_WRITE),
				 .OUT_READ(mod__regWrite__enLocal$OUT_READ));

  // submodule mod__wbIndex__dataLocal
  mkWire #( /*width*/ 32'd5) mod__wbIndex__dataLocal(.IN_WRITE(mod__wbIndex__dataLocal$IN_WRITE),
						     .IN_EN_WRITE(mod__wbIndex__dataLocal$IN_EN_WRITE),
						     .OUT_READ(mod__wbIndex__dataLocal$OUT_READ));

  // submodule mod__wbIndex__enLocal
  mkPulse mod__wbIndex__enLocal(.IN_EN_WRITE(mod__wbIndex__enLocal$IN_EN_WRITE),
				.OUT_READ(mod__wbIndex__enLocal$OUT_READ));

  // submodule mod__wb__enq__dataLocal
  mkWire #( /*width*/ 32'd38) mod__wb__enq__dataLocal(.IN_WRITE(mod__wb__enq__dataLocal$IN_WRITE),
						      .IN_EN_WRITE(mod__wb__enq__dataLocal$IN_EN_WRITE),
						      .OUT_READ(mod__wb__enq__dataLocal$OUT_READ));

  // submodule mod__wb__enq__enLocal
  mkPulse mod__wb__enq__enLocal(.IN_EN_WRITE(mod__wb__enq__enLocal$IN_EN_WRITE),
				.OUT_READ(mod__wb__enq__enLocal$OUT_READ));

  // submodule mod__wb__notFull__dataLocal
  mkWire #( /*width*/ 32'd1) mod__wb__notFull__dataLocal(.IN_WRITE(mod__wb__notFull__dataLocal$IN_WRITE),
							 .IN_EN_WRITE(mod__wb__notFull__dataLocal$IN_EN_WRITE),
							 .OUT_READ(mod__wb__notFull__dataLocal$OUT_READ));

  // submodule wbQ_mod__f_head
  mkReg #( /*width*/ 32'd0) wbQ_mod__f_head(.CLK(CLK),
					    .RST_N(RST_N),
					    .IN_EN_WRITE(wbQ_mod__f_head$IN_EN_WRITE));

  // submodule wbQ_mod__f_mod__clear__dataLocal
  mkPulse wbQ_mod__f_mod__clear__dataLocal(.IN_EN_WRITE(wbQ_mod__f_mod__clear__dataLocal$IN_EN_WRITE),
					   .OUT_READ(wbQ_mod__f_mod__clear__dataLocal$OUT_READ));

  // submodule wbQ_mod__f_mod__deq__data__0_dataLocal
  mkWire #( /*width*/ 32'd38) wbQ_mod__f_mod__deq__data__0_dataLocal(.IN_WRITE(wbQ_mod__f_mod__deq__data__0_dataLocal$IN_WRITE),
								     .IN_EN_WRITE(wbQ_mod__f_mod__deq__data__0_dataLocal$IN_EN_WRITE),
								     .OUT_READ(wbQ_mod__f_mod__deq__data__0_dataLocal$OUT_READ));

  // submodule wbQ_mod__f_mod__deq__data__0_enLocal
  mkPulse wbQ_mod__f_mod__deq__data__0_enLocal(.IN_EN_WRITE(wbQ_mod__f_mod__deq__data__0_enLocal$IN_EN_WRITE),
					       .OUT_READ());

  // submodule wbQ_mod__f_mod__deq__numDeqs__dataLocal
  mkWire #( /*width*/ 32'd1) wbQ_mod__f_mod__deq__numDeqs__dataLocal(.IN_WRITE(wbQ_mod__f_mod__deq__numDeqs__dataLocal$IN_WRITE),
								     .IN_EN_WRITE(wbQ_mod__f_mod__deq__numDeqs__dataLocal$IN_EN_WRITE),
								     .OUT_READ(wbQ_mod__f_mod__deq__numDeqs__dataLocal$OUT_READ));

  // submodule wbQ_mod__f_mod__deq__numDeqs__enLocal
  mkPulse wbQ_mod__f_mod__deq__numDeqs__enLocal(.IN_EN_WRITE(wbQ_mod__f_mod__deq__numDeqs__enLocal$IN_EN_WRITE),
						.OUT_READ(wbQ_mod__f_mod__deq__numDeqs__enLocal$OUT_READ));

  // submodule wbQ_mod__f_mod__deq__numFilledSlots__dataLocal
  mkWire #( /*width*/ 32'd1) wbQ_mod__f_mod__deq__numFilledSlots__dataLocal(.IN_WRITE(wbQ_mod__f_mod__deq__numFilledSlots__dataLocal$IN_WRITE),
									    .IN_EN_WRITE(wbQ_mod__f_mod__deq__numFilledSlots__dataLocal$IN_EN_WRITE),
									    .OUT_READ(wbQ_mod__f_mod__deq__numFilledSlots__dataLocal$OUT_READ));

  // submodule wbQ_mod__f_mod__enq__data__0_dataLocal
  mkWire #( /*width*/ 32'd38) wbQ_mod__f_mod__enq__data__0_dataLocal(.IN_WRITE(wbQ_mod__f_mod__enq__data__0_dataLocal$IN_WRITE),
								     .IN_EN_WRITE(wbQ_mod__f_mod__enq__data__0_dataLocal$IN_EN_WRITE),
								     .OUT_READ(wbQ_mod__f_mod__enq__data__0_dataLocal$OUT_READ));

  // submodule wbQ_mod__f_mod__enq__data__0_enLocal
  mkPulse wbQ_mod__f_mod__enq__data__0_enLocal(.IN_EN_WRITE(wbQ_mod__f_mod__enq__data__0_enLocal$IN_EN_WRITE),
					       .OUT_READ(wbQ_mod__f_mod__enq__data__0_enLocal$OUT_READ));

  // submodule wbQ_mod__f_mod__enq__numFreeSlots__dataLocal
  mkWire #( /*width*/ 32'd1) wbQ_mod__f_mod__enq__numFreeSlots__dataLocal(.IN_WRITE(wbQ_mod__f_mod__enq__numFreeSlots__dataLocal$IN_WRITE),
									  .IN_EN_WRITE(wbQ_mod__f_mod__enq__numFreeSlots__dataLocal$IN_EN_WRITE),
									  .OUT_READ(wbQ_mod__f_mod__enq__numFreeSlots__dataLocal$OUT_READ));

  // submodule wbQ_mod__f_numElems
  mkReg #( /*width*/ 32'd1,  /*init*/ 1'd0) wbQ_mod__f_numElems(.CLK(CLK),
								.RST_N(RST_N),
								.IN_WRITE(wbQ_mod__f_numElems$IN_WRITE),
								.IN_EN_WRITE(wbQ_mod__f_numElems$IN_EN_WRITE),
								.OUT_READ(wbQ_mod__f_numElems$OUT_READ));

  // submodule wbQ_mod__f_rf_mod__mod__read__0_req__dataLocal
  mkWire #( /*width*/ 32'd0) wbQ_mod__f_rf_mod__mod__read__0_req__dataLocal(.IN_EN_WRITE(wbQ_mod__f_rf_mod__mod__read__0_req__dataLocal$IN_EN_WRITE));

  // submodule wbQ_mod__f_rf_mod__mod__read__0_req__enLocal
  mkPulse wbQ_mod__f_rf_mod__mod__read__0_req__enLocal(.IN_EN_WRITE(wbQ_mod__f_rf_mod__mod__read__0_req__enLocal$IN_EN_WRITE),
						       .OUT_READ());

  // submodule wbQ_mod__f_rf_mod__mod__read__0_resp__dataLocal
  mkWire #( /*width*/ 32'd38) wbQ_mod__f_rf_mod__mod__read__0_resp__dataLocal(.IN_WRITE(wbQ_mod__f_rf_mod__mod__read__0_resp__dataLocal$IN_WRITE),
									      .IN_EN_WRITE(wbQ_mod__f_rf_mod__mod__read__0_resp__dataLocal$IN_EN_WRITE),
									      .OUT_READ(wbQ_mod__f_rf_mod__mod__read__0_resp__dataLocal$OUT_READ));

  // submodule wbQ_mod__f_rf_mod__mod__write__0_dataLocal
  mkWire #( /*width*/ 32'd38) wbQ_mod__f_rf_mod__mod__write__0_dataLocal(.IN_WRITE(wbQ_mod__f_rf_mod__mod__write__0_dataLocal$IN_WRITE),
									 .IN_EN_WRITE(wbQ_mod__f_rf_mod__mod__write__0_dataLocal$IN_EN_WRITE),
									 .OUT_READ(wbQ_mod__f_rf_mod__mod__write__0_dataLocal$OUT_READ));

  // submodule wbQ_mod__f_rf_mod__mod__write__0_enLocal
  mkPulse wbQ_mod__f_rf_mod__mod__write__0_enLocal(.IN_EN_WRITE(wbQ_mod__f_rf_mod__mod__write__0_enLocal$IN_EN_WRITE),
						   .OUT_READ(wbQ_mod__f_rf_mod__mod__write__0_enLocal$OUT_READ));

  // submodule wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_req__dataLocal
  mkWire #( /*width*/ 32'd0) wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_req__dataLocal(.IN_EN_WRITE(wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_req__dataLocal$IN_EN_WRITE));

  // submodule wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_req__enLocal
  mkPulse wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_req__enLocal(.IN_EN_WRITE(wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_req__enLocal$IN_EN_WRITE),
							      .OUT_READ());

  // submodule wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal
  mkWire #( /*width*/ 32'd38) wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal(.IN_WRITE(wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal$IN_WRITE),
										     .IN_EN_WRITE(wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal$IN_EN_WRITE),
										     .OUT_READ(wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal$OUT_READ));

  // submodule wbQ_mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal
  mkWire #( /*width*/ 32'd38) wbQ_mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal(.IN_WRITE(wbQ_mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal$IN_WRITE),
										.IN_EN_WRITE(wbQ_mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal$IN_EN_WRITE),
										.OUT_READ(wbQ_mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal$OUT_READ));

  // submodule wbQ_mod__f_rf_mod__rf_0_0_mod__write__0_enLocal
  mkPulse wbQ_mod__f_rf_mod__rf_0_0_mod__write__0_enLocal(.IN_EN_WRITE(wbQ_mod__f_rf_mod__rf_0_0_mod__write__0_enLocal$IN_EN_WRITE),
							  .OUT_READ(wbQ_mod__f_rf_mod__rf_0_0_mod__write__0_enLocal$OUT_READ));

  // submodule wbQ_mod__f_rf_mod__rf_0_0_rf
  mkRegFileVerilogLoad #( /*width*/ 32'd38,
			  /*n*/ 32'd0,
			  /*size*/ 32'd1,
			  /*file*/ "",
			  /*mode*/ 32'd0) wbQ_mod__f_rf_mod__rf_0_0_rf(.CLK(CLK),
								       .RST_N(RST_N),
								       .WRITE_DATA_WRITE(wbQ_mod__f_rf_mod__rf_0_0_rf$WRITE_DATA_WRITE),
								       .WRITE_EN_WRITE(wbQ_mod__f_rf_mod__rf_0_0_rf$WRITE_EN_WRITE),
								       .READ_RESP_READ(wbQ_mod__f_rf_mod__rf_0_0_rf$READ_RESP_READ));

  // submodule wbQ_mod__f_rf_mod__whichReg
  mkReg #( /*width*/ 32'd0) wbQ_mod__f_rf_mod__whichReg(.CLK(CLK),
							.RST_N(RST_N),
							.IN_EN_WRITE(wbQ_mod__f_rf_mod__whichReg$IN_EN_WRITE));

  // submodule wbQ_mod__f_tail
  mkReg #( /*width*/ 32'd0) wbQ_mod__f_tail(.CLK(CLK),
					    .RST_N(RST_N),
					    .IN_EN_WRITE(wbQ_mod__f_tail$IN_EN_WRITE));

  // submodule wbQ_mod__mod__deq__deq__dataLocal
  mkPulse wbQ_mod__mod__deq__deq__dataLocal(.IN_EN_WRITE(wbQ_mod__mod__deq__deq__dataLocal$IN_EN_WRITE),
					    .OUT_READ(wbQ_mod__mod__deq__deq__dataLocal$OUT_READ));

  // submodule wbQ_mod__mod__deq__first__dataLocal
  mkWire #( /*width*/ 32'd38) wbQ_mod__mod__deq__first__dataLocal(.IN_WRITE(wbQ_mod__mod__deq__first__dataLocal$IN_WRITE),
								  .IN_EN_WRITE(wbQ_mod__mod__deq__first__dataLocal$IN_EN_WRITE),
								  .OUT_READ(wbQ_mod__mod__deq__first__dataLocal$OUT_READ));

  // submodule wbQ_mod__mod__deq__notEmpty__dataLocal
  mkWire #( /*width*/ 32'd1) wbQ_mod__mod__deq__notEmpty__dataLocal(.IN_WRITE(wbQ_mod__mod__deq__notEmpty__dataLocal$IN_WRITE),
								    .IN_EN_WRITE(wbQ_mod__mod__deq__notEmpty__dataLocal$IN_EN_WRITE),
								    .OUT_READ(wbQ_mod__mod__deq__notEmpty__dataLocal$OUT_READ));

  // submodule wbQ_mod__mod__enq__enq__dataLocal
  mkWire #( /*width*/ 32'd38) wbQ_mod__mod__enq__enq__dataLocal(.IN_WRITE(wbQ_mod__mod__enq__enq__dataLocal$IN_WRITE),
								.IN_EN_WRITE(wbQ_mod__mod__enq__enq__dataLocal$IN_EN_WRITE),
								.OUT_READ(wbQ_mod__mod__enq__enq__dataLocal$OUT_READ));

  // submodule wbQ_mod__mod__enq__enq__enLocal
  mkPulse wbQ_mod__mod__enq__enq__enLocal(.IN_EN_WRITE(wbQ_mod__mod__enq__enq__enLocal$IN_EN_WRITE),
					  .OUT_READ(wbQ_mod__mod__enq__enq__enLocal$OUT_READ));

  // submodule wbQ_mod__mod__enq__notFull__dataLocal
  mkWire #( /*width*/ 32'd1) wbQ_mod__mod__enq__notFull__dataLocal(.IN_WRITE(wbQ_mod__mod__enq__notFull__dataLocal$IN_WRITE),
								   .IN_EN_WRITE(wbQ_mod__mod__enq__notFull__dataLocal$IN_EN_WRITE),
								   .OUT_READ(wbQ_mod__mod__enq__notFull__dataLocal$OUT_READ));

  // rule RL_c1_1
  assign WILL_FIRE_RL_c1_1 =
	     !mod__wb__enq__enLocal$OUT_READ ||
	     wbQ_mod__mod__enq__notFull__dataLocal$OUT_READ ;

  // submodule mod__dataQ__deq__dataLocal
  assign mod__dataQ__deq__dataLocal$IN_EN_WRITE =
	     wbQ_mod__mod__deq__notEmpty__dataLocal$OUT_READ &&
	     (wbQ_mod__mod__deq__first__dataLocal$OUT_READ[32] ||
	      mod__dataQ__notEmpty__dataLocal$OUT_READ) &&
	     !wbQ_mod__mod__deq__first__dataLocal$OUT_READ[32] ;

  // submodule mod__dataQ__first__dataLocal
  assign mod__dataQ__first__dataLocal$IN_WRITE = dataQ_first_WRITE ;
  assign mod__dataQ__first__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule mod__dataQ__notEmpty__dataLocal
  assign mod__dataQ__notEmpty__dataLocal$IN_WRITE = dataQ_notEmpty_WRITE ;
  assign mod__dataQ__notEmpty__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule mod__regWrite__dataLocal
  assign mod__regWrite__dataLocal$IN_WRITE =
	     { wbQ_mod__mod__deq__first__dataLocal$OUT_READ[37:33],
	       wbQ_mod__mod__deq__first__dataLocal$OUT_READ[32] ?
		 wbQ_mod__mod__deq__first__dataLocal$OUT_READ[31:0] :
		 mod__dataQ__first__dataLocal$OUT_READ } ;
  assign mod__regWrite__dataLocal$IN_EN_WRITE =
	     wbQ_mod__mod__deq__notEmpty__dataLocal$OUT_READ &&
	     (wbQ_mod__mod__deq__first__dataLocal$OUT_READ[32] ||
	      mod__dataQ__notEmpty__dataLocal$OUT_READ) ;

  // submodule mod__regWrite__enLocal
  assign mod__regWrite__enLocal$IN_EN_WRITE =
	     wbQ_mod__mod__deq__notEmpty__dataLocal$OUT_READ &&
	     (wbQ_mod__mod__deq__first__dataLocal$OUT_READ[32] ||
	      mod__dataQ__notEmpty__dataLocal$OUT_READ) ;

  // submodule mod__wbIndex__dataLocal
  assign mod__wbIndex__dataLocal$IN_WRITE =
	     wbQ_mod__mod__deq__first__dataLocal$OUT_READ[37:33] ;
  assign mod__wbIndex__dataLocal$IN_EN_WRITE =
	     wbQ_mod__mod__deq__notEmpty__dataLocal$OUT_READ ;

  // submodule mod__wbIndex__enLocal
  assign mod__wbIndex__enLocal$IN_EN_WRITE =
	     wbQ_mod__mod__deq__notEmpty__dataLocal$OUT_READ ;

  // submodule mod__wb__enq__dataLocal
  assign mod__wb__enq__dataLocal$IN_WRITE = wb_enq_WRITE ;
  assign mod__wb__enq__dataLocal$IN_EN_WRITE = wb_enq_EN_WRITE ;

  // submodule mod__wb__enq__enLocal
  assign mod__wb__enq__enLocal$IN_EN_WRITE = wb_enq_EN_WRITE ;

  // submodule mod__wb__notFull__dataLocal
  assign mod__wb__notFull__dataLocal$IN_WRITE =
	     wbQ_mod__mod__enq__notFull__dataLocal$OUT_READ ;
  assign mod__wb__notFull__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule wbQ_mod__f_head
  assign wbQ_mod__f_head$IN_EN_WRITE = 1'd1 ;

  // submodule wbQ_mod__f_mod__clear__dataLocal
  assign wbQ_mod__f_mod__clear__dataLocal$IN_EN_WRITE = 1'b0 ;

  // submodule wbQ_mod__f_mod__deq__data__0_dataLocal
  assign wbQ_mod__f_mod__deq__data__0_dataLocal$IN_WRITE =
	     wbQ_mod__f_rf_mod__mod__read__0_resp__dataLocal$OUT_READ ;
  assign wbQ_mod__f_mod__deq__data__0_dataLocal$IN_EN_WRITE =
	     wbQ_mod__f_numElems$OUT_READ ;

  // submodule wbQ_mod__f_mod__deq__data__0_enLocal
  assign wbQ_mod__f_mod__deq__data__0_enLocal$IN_EN_WRITE =
	     wbQ_mod__f_numElems$OUT_READ ;

  // submodule wbQ_mod__f_mod__deq__numDeqs__dataLocal
  assign wbQ_mod__f_mod__deq__numDeqs__dataLocal$IN_WRITE =
	     wbQ_mod__mod__deq__deq__dataLocal$OUT_READ ;
  assign wbQ_mod__f_mod__deq__numDeqs__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule wbQ_mod__f_mod__deq__numDeqs__enLocal
  assign wbQ_mod__f_mod__deq__numDeqs__enLocal$IN_EN_WRITE = 1'd1 ;

  // submodule wbQ_mod__f_mod__deq__numFilledSlots__dataLocal
  assign wbQ_mod__f_mod__deq__numFilledSlots__dataLocal$IN_WRITE =
	     wbQ_mod__f_numElems$OUT_READ ;
  assign wbQ_mod__f_mod__deq__numFilledSlots__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule wbQ_mod__f_mod__enq__data__0_dataLocal
  assign wbQ_mod__f_mod__enq__data__0_dataLocal$IN_WRITE =
	     wbQ_mod__mod__enq__enq__dataLocal$OUT_READ ;
  assign wbQ_mod__f_mod__enq__data__0_dataLocal$IN_EN_WRITE =
	     wbQ_mod__mod__enq__enq__enLocal$OUT_READ ;

  // submodule wbQ_mod__f_mod__enq__data__0_enLocal
  assign wbQ_mod__f_mod__enq__data__0_enLocal$IN_EN_WRITE =
	     wbQ_mod__mod__enq__enq__enLocal$OUT_READ ;

  // submodule wbQ_mod__f_mod__enq__numFreeSlots__dataLocal
  assign wbQ_mod__f_mod__enq__numFreeSlots__dataLocal$IN_WRITE =
	     x__h4338 + wbQ_mod__f_mod__deq__numDeqs__dataLocal$OUT_READ ;
  assign wbQ_mod__f_mod__enq__numFreeSlots__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule wbQ_mod__f_numElems
  assign wbQ_mod__f_numElems$IN_WRITE =
	     !wbQ_mod__f_mod__clear__dataLocal$OUT_READ &&
	     wbQ_mod__f_numElems$OUT_READ + y__h4903 ;
  assign wbQ_mod__f_numElems$IN_EN_WRITE = 1'd1 ;

  // submodule wbQ_mod__f_rf_mod__mod__read__0_req__dataLocal
  assign wbQ_mod__f_rf_mod__mod__read__0_req__dataLocal$IN_EN_WRITE =
	     wbQ_mod__f_numElems$OUT_READ ;

  // submodule wbQ_mod__f_rf_mod__mod__read__0_req__enLocal
  assign wbQ_mod__f_rf_mod__mod__read__0_req__enLocal$IN_EN_WRITE =
	     wbQ_mod__f_numElems$OUT_READ ;

  // submodule wbQ_mod__f_rf_mod__mod__read__0_resp__dataLocal
  assign wbQ_mod__f_rf_mod__mod__read__0_resp__dataLocal$IN_WRITE =
	     wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal$OUT_READ ;
  assign wbQ_mod__f_rf_mod__mod__read__0_resp__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule wbQ_mod__f_rf_mod__mod__write__0_dataLocal
  assign wbQ_mod__f_rf_mod__mod__write__0_dataLocal$IN_WRITE =
	     wbQ_mod__f_mod__enq__data__0_dataLocal$OUT_READ ;
  assign wbQ_mod__f_rf_mod__mod__write__0_dataLocal$IN_EN_WRITE =
	     wbQ_mod__f_mod__enq__data__0_enLocal$OUT_READ ;

  // submodule wbQ_mod__f_rf_mod__mod__write__0_enLocal
  assign wbQ_mod__f_rf_mod__mod__write__0_enLocal$IN_EN_WRITE =
	     wbQ_mod__f_mod__enq__data__0_enLocal$OUT_READ ;

  // submodule wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_req__dataLocal
  assign wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_req__dataLocal$IN_EN_WRITE =
	     1'd1 ;

  // submodule wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_req__enLocal
  assign wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_req__enLocal$IN_EN_WRITE =
	     1'd1 ;

  // submodule wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal
  assign wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal$IN_WRITE =
	     wbQ_mod__f_rf_mod__rf_0_0_rf$READ_RESP_READ ;
  assign wbQ_mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal$IN_EN_WRITE =
	     1'd1 ;

  // submodule wbQ_mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal
  assign wbQ_mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal$IN_WRITE =
	     wbQ_mod__f_rf_mod__mod__write__0_dataLocal$OUT_READ ;
  assign wbQ_mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal$IN_EN_WRITE =
	     wbQ_mod__f_rf_mod__mod__write__0_enLocal$OUT_READ ;

  // submodule wbQ_mod__f_rf_mod__rf_0_0_mod__write__0_enLocal
  assign wbQ_mod__f_rf_mod__rf_0_0_mod__write__0_enLocal$IN_EN_WRITE =
	     wbQ_mod__f_rf_mod__mod__write__0_enLocal$OUT_READ ;

  // submodule wbQ_mod__f_rf_mod__rf_0_0_rf
  assign wbQ_mod__f_rf_mod__rf_0_0_rf$WRITE_DATA_WRITE =
	     wbQ_mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal$OUT_READ ;
  assign wbQ_mod__f_rf_mod__rf_0_0_rf$WRITE_EN_WRITE =
	     wbQ_mod__f_rf_mod__rf_0_0_mod__write__0_enLocal$OUT_READ ;

  // submodule wbQ_mod__f_rf_mod__whichReg
  assign wbQ_mod__f_rf_mod__whichReg$IN_EN_WRITE = 1'd1 ;

  // submodule wbQ_mod__f_tail
  assign wbQ_mod__f_tail$IN_EN_WRITE = 1'd1 ;

  // submodule wbQ_mod__mod__deq__deq__dataLocal
  assign wbQ_mod__mod__deq__deq__dataLocal$IN_EN_WRITE =
	     wbQ_mod__mod__deq__notEmpty__dataLocal$OUT_READ &&
	     (wbQ_mod__mod__deq__first__dataLocal$OUT_READ[32] ||
	      mod__dataQ__notEmpty__dataLocal$OUT_READ) ;

  // submodule wbQ_mod__mod__deq__first__dataLocal
  assign wbQ_mod__mod__deq__first__dataLocal$IN_WRITE =
	     wbQ_mod__f_mod__deq__data__0_dataLocal$OUT_READ ;
  assign wbQ_mod__mod__deq__first__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule wbQ_mod__mod__deq__notEmpty__dataLocal
  assign wbQ_mod__mod__deq__notEmpty__dataLocal$IN_WRITE =
	     wbQ_mod__f_mod__deq__numFilledSlots__dataLocal$OUT_READ ;
  assign wbQ_mod__mod__deq__notEmpty__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule wbQ_mod__mod__enq__enq__dataLocal
  assign wbQ_mod__mod__enq__enq__dataLocal$IN_WRITE =
	     mod__wb__enq__dataLocal$OUT_READ ;
  assign wbQ_mod__mod__enq__enq__dataLocal$IN_EN_WRITE =
	     WILL_FIRE_RL_c1_1 && mod__wb__enq__enLocal$OUT_READ ;

  // submodule wbQ_mod__mod__enq__enq__enLocal
  assign wbQ_mod__mod__enq__enq__enLocal$IN_EN_WRITE =
	     WILL_FIRE_RL_c1_1 && mod__wb__enq__enLocal$OUT_READ ;

  // submodule wbQ_mod__mod__enq__notFull__dataLocal
  assign wbQ_mod__mod__enq__notFull__dataLocal$IN_WRITE =
	     wbQ_mod__f_mod__enq__numFreeSlots__dataLocal$OUT_READ ;
  assign wbQ_mod__mod__enq__notFull__dataLocal$IN_EN_WRITE = 1'd1 ;

  // remaining internal signals
  assign _theResult_____1__h4859 =
	     wbQ_mod__f_mod__deq__numDeqs__enLocal$OUT_READ &&
	     wbQ_mod__f_mod__deq__numDeqs__dataLocal$OUT_READ ;
  assign x__h4338 = 1'd1 - wbQ_mod__f_numElems$OUT_READ ;
  assign y__h4903 =
	     wbQ_mod__f_mod__enq__data__0_enLocal$OUT_READ -
	     _theResult_____1__h4859 ;
endmodule  // mkWriteback

