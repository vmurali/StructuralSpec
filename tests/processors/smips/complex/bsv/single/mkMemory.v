//
// Generated by Bluespec Compiler, version 2014.03.beta2 (build 33633, 2014-03-26)
//
// On Fri Nov 21 15:38:07 EST 2014
//
//
// Ports:
// Name                         I/O  size props
// instReqQ_deq_READ              O     1
// instQ_enq_READ                 O    32
// instQ_enq_EN_READ              O     1
// dataReqQ_deq_READ              O     1
// dataQ_enq_READ                 O    32
// dataQ_enq_EN_READ              O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// instReqQ_notEmpty_WRITE        I     1
// instReqQ_first_WRITE           I    32
// instQ_notFull_WRITE            I     1
// dataReqQ_notEmpty_WRITE        I     1
// dataReqQ_first_WRITE           I    65
// dataQ_notFull_WRITE            I     1
//
// Combinational paths from inputs to outputs:
//   (instReqQ_notEmpty_WRITE, instQ_notFull_WRITE) -> instReqQ_deq_READ
//   (instReqQ_notEmpty_WRITE,
//    instReqQ_first_WRITE,
//    instQ_notFull_WRITE) -> instQ_enq_READ
//   (instReqQ_notEmpty_WRITE, instQ_notFull_WRITE) -> instQ_enq_EN_READ
//   (dataReqQ_notEmpty_WRITE,
//    dataReqQ_first_WRITE,
//    dataQ_notFull_WRITE) -> dataReqQ_deq_READ
//   (dataReqQ_notEmpty_WRITE,
//    dataReqQ_first_WRITE,
//    dataQ_notFull_WRITE) -> dataQ_enq_READ
//   (dataReqQ_notEmpty_WRITE,
//    dataReqQ_first_WRITE,
//    dataQ_notFull_WRITE) -> dataQ_enq_EN_READ
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkMemory(CLK,
		RST_N,

		instReqQ_notEmpty_WRITE,

		instReqQ_first_WRITE,

		instReqQ_deq_READ,

		instQ_notFull_WRITE,

		instQ_enq_READ,

		instQ_enq_EN_READ,

		dataReqQ_notEmpty_WRITE,

		dataReqQ_first_WRITE,

		dataReqQ_deq_READ,

		dataQ_notFull_WRITE,

		dataQ_enq_READ,

		dataQ_enq_EN_READ);
  input  CLK;
  input  RST_N;

  // action method instReqQ_notEmpty_write
  input  instReqQ_notEmpty_WRITE;

  // action method instReqQ_first_write
  input  [31 : 0] instReqQ_first_WRITE;

  // value method instReqQ_deq__read
  output instReqQ_deq_READ;

  // action method instQ_notFull_write
  input  instQ_notFull_WRITE;

  // value method instQ_enq__read
  output [31 : 0] instQ_enq_READ;

  // value method instQ_enq_en
  output instQ_enq_EN_READ;

  // action method dataReqQ_notEmpty_write
  input  dataReqQ_notEmpty_WRITE;

  // action method dataReqQ_first_write
  input  [64 : 0] dataReqQ_first_WRITE;

  // value method dataReqQ_deq__read
  output dataReqQ_deq_READ;

  // action method dataQ_notFull_write
  input  dataQ_notFull_WRITE;

  // value method dataQ_enq__read
  output [31 : 0] dataQ_enq_READ;

  // value method dataQ_enq_en
  output dataQ_enq_EN_READ;

  // signals for module outputs
  wire [31 : 0] dataQ_enq_READ, instQ_enq_READ;
  wire dataQ_enq_EN_READ,
       dataReqQ_deq_READ,
       instQ_enq_EN_READ,
       instReqQ_deq_READ;

  // ports of submodule mod__dataQ__enq__dataLocal
  wire [31 : 0] mod__dataQ__enq__dataLocal$IN_WRITE,
		mod__dataQ__enq__dataLocal$OUT_READ;
  wire mod__dataQ__enq__dataLocal$IN_EN_WRITE;

  // ports of submodule mod__dataQ__enq__enLocal
  wire mod__dataQ__enq__enLocal$IN_EN_WRITE,
       mod__dataQ__enq__enLocal$OUT_READ;

  // ports of submodule mod__dataQ__notFull__dataLocal
  wire mod__dataQ__notFull__dataLocal$IN_EN_WRITE,
       mod__dataQ__notFull__dataLocal$IN_WRITE,
       mod__dataQ__notFull__dataLocal$OUT_READ;

  // ports of submodule mod__dataReqQ__deq__dataLocal
  wire mod__dataReqQ__deq__dataLocal$IN_EN_WRITE,
       mod__dataReqQ__deq__dataLocal$OUT_READ;

  // ports of submodule mod__dataReqQ__first__dataLocal
  wire [64 : 0] mod__dataReqQ__first__dataLocal$IN_WRITE,
		mod__dataReqQ__first__dataLocal$OUT_READ;
  wire mod__dataReqQ__first__dataLocal$IN_EN_WRITE;

  // ports of submodule mod__dataReqQ__notEmpty__dataLocal
  wire mod__dataReqQ__notEmpty__dataLocal$IN_EN_WRITE,
       mod__dataReqQ__notEmpty__dataLocal$IN_WRITE,
       mod__dataReqQ__notEmpty__dataLocal$OUT_READ;

  // ports of submodule mod__instQ__enq__dataLocal
  wire [31 : 0] mod__instQ__enq__dataLocal$IN_WRITE,
		mod__instQ__enq__dataLocal$OUT_READ;
  wire mod__instQ__enq__dataLocal$IN_EN_WRITE;

  // ports of submodule mod__instQ__enq__enLocal
  wire mod__instQ__enq__enLocal$IN_EN_WRITE,
       mod__instQ__enq__enLocal$OUT_READ;

  // ports of submodule mod__instQ__notFull__dataLocal
  wire mod__instQ__notFull__dataLocal$IN_EN_WRITE,
       mod__instQ__notFull__dataLocal$IN_WRITE,
       mod__instQ__notFull__dataLocal$OUT_READ;

  // ports of submodule mod__instReqQ__deq__dataLocal
  wire mod__instReqQ__deq__dataLocal$IN_EN_WRITE,
       mod__instReqQ__deq__dataLocal$OUT_READ;

  // ports of submodule mod__instReqQ__first__dataLocal
  wire [31 : 0] mod__instReqQ__first__dataLocal$IN_WRITE,
		mod__instReqQ__first__dataLocal$OUT_READ;
  wire mod__instReqQ__first__dataLocal$IN_EN_WRITE;

  // ports of submodule mod__instReqQ__notEmpty__dataLocal
  wire mod__instReqQ__notEmpty__dataLocal$IN_EN_WRITE,
       mod__instReqQ__notEmpty__dataLocal$IN_WRITE,
       mod__instReqQ__notEmpty__dataLocal$OUT_READ;

  // ports of submodule regs_mod__mod__read__0_req__dataLocal
  wire [19 : 0] regs_mod__mod__read__0_req__dataLocal$IN_WRITE,
		regs_mod__mod__read__0_req__dataLocal$OUT_READ;
  wire regs_mod__mod__read__0_req__dataLocal$IN_EN_WRITE;

  // ports of submodule regs_mod__mod__read__0_req__enLocal
  wire regs_mod__mod__read__0_req__enLocal$IN_EN_WRITE;

  // ports of submodule regs_mod__mod__read__0_resp__dataLocal
  wire [31 : 0] regs_mod__mod__read__0_resp__dataLocal$IN_WRITE,
		regs_mod__mod__read__0_resp__dataLocal$OUT_READ;
  wire regs_mod__mod__read__0_resp__dataLocal$IN_EN_WRITE;

  // ports of submodule regs_mod__mod__read__1_req__dataLocal
  wire [19 : 0] regs_mod__mod__read__1_req__dataLocal$IN_WRITE,
		regs_mod__mod__read__1_req__dataLocal$OUT_READ;
  wire regs_mod__mod__read__1_req__dataLocal$IN_EN_WRITE;

  // ports of submodule regs_mod__mod__read__1_req__enLocal
  wire regs_mod__mod__read__1_req__enLocal$IN_EN_WRITE;

  // ports of submodule regs_mod__mod__read__1_resp__dataLocal
  wire [31 : 0] regs_mod__mod__read__1_resp__dataLocal$IN_WRITE,
		regs_mod__mod__read__1_resp__dataLocal$OUT_READ;
  wire regs_mod__mod__read__1_resp__dataLocal$IN_EN_WRITE;

  // ports of submodule regs_mod__mod__write__0_dataLocal
  wire [51 : 0] regs_mod__mod__write__0_dataLocal$IN_WRITE,
		regs_mod__mod__write__0_dataLocal$OUT_READ;
  wire regs_mod__mod__write__0_dataLocal$IN_EN_WRITE;

  // ports of submodule regs_mod__mod__write__0_enLocal
  wire regs_mod__mod__write__0_enLocal$IN_EN_WRITE,
       regs_mod__mod__write__0_enLocal$OUT_READ;

  // ports of submodule regs_mod__rf_0_0_mod__read__0_req__dataLocal
  wire [19 : 0] regs_mod__rf_0_0_mod__read__0_req__dataLocal$IN_WRITE,
		regs_mod__rf_0_0_mod__read__0_req__dataLocal$OUT_READ;
  wire regs_mod__rf_0_0_mod__read__0_req__dataLocal$IN_EN_WRITE;

  // ports of submodule regs_mod__rf_0_0_mod__read__0_req__enLocal
  wire regs_mod__rf_0_0_mod__read__0_req__enLocal$IN_EN_WRITE;

  // ports of submodule regs_mod__rf_0_0_mod__read__0_resp__dataLocal
  wire [31 : 0] regs_mod__rf_0_0_mod__read__0_resp__dataLocal$IN_WRITE,
		regs_mod__rf_0_0_mod__read__0_resp__dataLocal$OUT_READ;
  wire regs_mod__rf_0_0_mod__read__0_resp__dataLocal$IN_EN_WRITE;

  // ports of submodule regs_mod__rf_0_0_mod__write__0_dataLocal
  wire [51 : 0] regs_mod__rf_0_0_mod__write__0_dataLocal$IN_WRITE,
		regs_mod__rf_0_0_mod__write__0_dataLocal$OUT_READ;
  wire regs_mod__rf_0_0_mod__write__0_dataLocal$IN_EN_WRITE;

  // ports of submodule regs_mod__rf_0_0_mod__write__0_enLocal
  wire regs_mod__rf_0_0_mod__write__0_enLocal$IN_EN_WRITE,
       regs_mod__rf_0_0_mod__write__0_enLocal$OUT_READ;

  // ports of submodule regs_mod__rf_0_0_rf
  wire [31 : 0] regs_mod__rf_0_0_rf$READ_RESP_READ,
		regs_mod__rf_0_0_rf$WRITE_DATA_WRITE;
  wire [19 : 0] regs_mod__rf_0_0_rf$READ_REQ_WRITE,
		regs_mod__rf_0_0_rf$WRITE_INDEX_WRITE;
  wire regs_mod__rf_0_0_rf$WRITE_EN_WRITE;

  // ports of submodule regs_mod__rf_0_1_mod__read__0_req__dataLocal
  wire [19 : 0] regs_mod__rf_0_1_mod__read__0_req__dataLocal$IN_WRITE,
		regs_mod__rf_0_1_mod__read__0_req__dataLocal$OUT_READ;
  wire regs_mod__rf_0_1_mod__read__0_req__dataLocal$IN_EN_WRITE;

  // ports of submodule regs_mod__rf_0_1_mod__read__0_req__enLocal
  wire regs_mod__rf_0_1_mod__read__0_req__enLocal$IN_EN_WRITE;

  // ports of submodule regs_mod__rf_0_1_mod__read__0_resp__dataLocal
  wire [31 : 0] regs_mod__rf_0_1_mod__read__0_resp__dataLocal$IN_WRITE,
		regs_mod__rf_0_1_mod__read__0_resp__dataLocal$OUT_READ;
  wire regs_mod__rf_0_1_mod__read__0_resp__dataLocal$IN_EN_WRITE;

  // ports of submodule regs_mod__rf_0_1_mod__write__0_dataLocal
  wire [51 : 0] regs_mod__rf_0_1_mod__write__0_dataLocal$IN_WRITE,
		regs_mod__rf_0_1_mod__write__0_dataLocal$OUT_READ;
  wire regs_mod__rf_0_1_mod__write__0_dataLocal$IN_EN_WRITE;

  // ports of submodule regs_mod__rf_0_1_mod__write__0_enLocal
  wire regs_mod__rf_0_1_mod__write__0_enLocal$IN_EN_WRITE,
       regs_mod__rf_0_1_mod__write__0_enLocal$OUT_READ;

  // ports of submodule regs_mod__rf_0_1_rf
  wire [31 : 0] regs_mod__rf_0_1_rf$READ_RESP_READ,
		regs_mod__rf_0_1_rf$WRITE_DATA_WRITE;
  wire [19 : 0] regs_mod__rf_0_1_rf$READ_REQ_WRITE,
		regs_mod__rf_0_1_rf$WRITE_INDEX_WRITE;
  wire regs_mod__rf_0_1_rf$WRITE_EN_WRITE;

  // ports of submodule regs_mod__whichReg
  wire regs_mod__whichReg$IN_EN_WRITE;

  // rule scheduling signals
  wire WILL_FIRE_RL_r2;

  // value method instReqQ_deq__read
  assign instReqQ_deq_READ = mod__instReqQ__deq__dataLocal$OUT_READ ;

  // value method instQ_enq__read
  assign instQ_enq_READ = mod__instQ__enq__dataLocal$OUT_READ ;

  // value method instQ_enq_en
  assign instQ_enq_EN_READ = mod__instQ__enq__enLocal$OUT_READ ;

  // value method dataReqQ_deq__read
  assign dataReqQ_deq_READ = mod__dataReqQ__deq__dataLocal$OUT_READ ;

  // value method dataQ_enq__read
  assign dataQ_enq_READ = mod__dataQ__enq__dataLocal$OUT_READ ;

  // value method dataQ_enq_en
  assign dataQ_enq_EN_READ = mod__dataQ__enq__enLocal$OUT_READ ;

  // submodule mod__dataQ__enq__dataLocal
  mkWire #( /*width*/ 32'd32) mod__dataQ__enq__dataLocal(.IN_WRITE(mod__dataQ__enq__dataLocal$IN_WRITE),
							 .IN_EN_WRITE(mod__dataQ__enq__dataLocal$IN_EN_WRITE),
							 .OUT_READ(mod__dataQ__enq__dataLocal$OUT_READ));

  // submodule mod__dataQ__enq__enLocal
  mkPulse mod__dataQ__enq__enLocal(.IN_EN_WRITE(mod__dataQ__enq__enLocal$IN_EN_WRITE),
				   .OUT_READ(mod__dataQ__enq__enLocal$OUT_READ));

  // submodule mod__dataQ__notFull__dataLocal
  mkWire #( /*width*/ 32'd1) mod__dataQ__notFull__dataLocal(.IN_WRITE(mod__dataQ__notFull__dataLocal$IN_WRITE),
							    .IN_EN_WRITE(mod__dataQ__notFull__dataLocal$IN_EN_WRITE),
							    .OUT_READ(mod__dataQ__notFull__dataLocal$OUT_READ));

  // submodule mod__dataReqQ__deq__dataLocal
  mkPulse mod__dataReqQ__deq__dataLocal(.IN_EN_WRITE(mod__dataReqQ__deq__dataLocal$IN_EN_WRITE),
					.OUT_READ(mod__dataReqQ__deq__dataLocal$OUT_READ));

  // submodule mod__dataReqQ__first__dataLocal
  mkWire #( /*width*/ 32'd65) mod__dataReqQ__first__dataLocal(.IN_WRITE(mod__dataReqQ__first__dataLocal$IN_WRITE),
							      .IN_EN_WRITE(mod__dataReqQ__first__dataLocal$IN_EN_WRITE),
							      .OUT_READ(mod__dataReqQ__first__dataLocal$OUT_READ));

  // submodule mod__dataReqQ__notEmpty__dataLocal
  mkWire #( /*width*/ 32'd1) mod__dataReqQ__notEmpty__dataLocal(.IN_WRITE(mod__dataReqQ__notEmpty__dataLocal$IN_WRITE),
								.IN_EN_WRITE(mod__dataReqQ__notEmpty__dataLocal$IN_EN_WRITE),
								.OUT_READ(mod__dataReqQ__notEmpty__dataLocal$OUT_READ));

  // submodule mod__instQ__enq__dataLocal
  mkWire #( /*width*/ 32'd32) mod__instQ__enq__dataLocal(.IN_WRITE(mod__instQ__enq__dataLocal$IN_WRITE),
							 .IN_EN_WRITE(mod__instQ__enq__dataLocal$IN_EN_WRITE),
							 .OUT_READ(mod__instQ__enq__dataLocal$OUT_READ));

  // submodule mod__instQ__enq__enLocal
  mkPulse mod__instQ__enq__enLocal(.IN_EN_WRITE(mod__instQ__enq__enLocal$IN_EN_WRITE),
				   .OUT_READ(mod__instQ__enq__enLocal$OUT_READ));

  // submodule mod__instQ__notFull__dataLocal
  mkWire #( /*width*/ 32'd1) mod__instQ__notFull__dataLocal(.IN_WRITE(mod__instQ__notFull__dataLocal$IN_WRITE),
							    .IN_EN_WRITE(mod__instQ__notFull__dataLocal$IN_EN_WRITE),
							    .OUT_READ(mod__instQ__notFull__dataLocal$OUT_READ));

  // submodule mod__instReqQ__deq__dataLocal
  mkPulse mod__instReqQ__deq__dataLocal(.IN_EN_WRITE(mod__instReqQ__deq__dataLocal$IN_EN_WRITE),
					.OUT_READ(mod__instReqQ__deq__dataLocal$OUT_READ));

  // submodule mod__instReqQ__first__dataLocal
  mkWire #( /*width*/ 32'd32) mod__instReqQ__first__dataLocal(.IN_WRITE(mod__instReqQ__first__dataLocal$IN_WRITE),
							      .IN_EN_WRITE(mod__instReqQ__first__dataLocal$IN_EN_WRITE),
							      .OUT_READ(mod__instReqQ__first__dataLocal$OUT_READ));

  // submodule mod__instReqQ__notEmpty__dataLocal
  mkWire #( /*width*/ 32'd1) mod__instReqQ__notEmpty__dataLocal(.IN_WRITE(mod__instReqQ__notEmpty__dataLocal$IN_WRITE),
								.IN_EN_WRITE(mod__instReqQ__notEmpty__dataLocal$IN_EN_WRITE),
								.OUT_READ(mod__instReqQ__notEmpty__dataLocal$OUT_READ));

  // submodule regs_mod__mod__read__0_req__dataLocal
  mkWire #( /*width*/ 32'd20) regs_mod__mod__read__0_req__dataLocal(.IN_WRITE(regs_mod__mod__read__0_req__dataLocal$IN_WRITE),
								    .IN_EN_WRITE(regs_mod__mod__read__0_req__dataLocal$IN_EN_WRITE),
								    .OUT_READ(regs_mod__mod__read__0_req__dataLocal$OUT_READ));

  // submodule regs_mod__mod__read__0_req__enLocal
  mkPulse regs_mod__mod__read__0_req__enLocal(.IN_EN_WRITE(regs_mod__mod__read__0_req__enLocal$IN_EN_WRITE),
					      .OUT_READ());

  // submodule regs_mod__mod__read__0_resp__dataLocal
  mkWire #( /*width*/ 32'd32) regs_mod__mod__read__0_resp__dataLocal(.IN_WRITE(regs_mod__mod__read__0_resp__dataLocal$IN_WRITE),
								     .IN_EN_WRITE(regs_mod__mod__read__0_resp__dataLocal$IN_EN_WRITE),
								     .OUT_READ(regs_mod__mod__read__0_resp__dataLocal$OUT_READ));

  // submodule regs_mod__mod__read__1_req__dataLocal
  mkWire #( /*width*/ 32'd20) regs_mod__mod__read__1_req__dataLocal(.IN_WRITE(regs_mod__mod__read__1_req__dataLocal$IN_WRITE),
								    .IN_EN_WRITE(regs_mod__mod__read__1_req__dataLocal$IN_EN_WRITE),
								    .OUT_READ(regs_mod__mod__read__1_req__dataLocal$OUT_READ));

  // submodule regs_mod__mod__read__1_req__enLocal
  mkPulse regs_mod__mod__read__1_req__enLocal(.IN_EN_WRITE(regs_mod__mod__read__1_req__enLocal$IN_EN_WRITE),
					      .OUT_READ());

  // submodule regs_mod__mod__read__1_resp__dataLocal
  mkWire #( /*width*/ 32'd32) regs_mod__mod__read__1_resp__dataLocal(.IN_WRITE(regs_mod__mod__read__1_resp__dataLocal$IN_WRITE),
								     .IN_EN_WRITE(regs_mod__mod__read__1_resp__dataLocal$IN_EN_WRITE),
								     .OUT_READ(regs_mod__mod__read__1_resp__dataLocal$OUT_READ));

  // submodule regs_mod__mod__write__0_dataLocal
  mkWire #( /*width*/ 32'd52) regs_mod__mod__write__0_dataLocal(.IN_WRITE(regs_mod__mod__write__0_dataLocal$IN_WRITE),
								.IN_EN_WRITE(regs_mod__mod__write__0_dataLocal$IN_EN_WRITE),
								.OUT_READ(regs_mod__mod__write__0_dataLocal$OUT_READ));

  // submodule regs_mod__mod__write__0_enLocal
  mkPulse regs_mod__mod__write__0_enLocal(.IN_EN_WRITE(regs_mod__mod__write__0_enLocal$IN_EN_WRITE),
					  .OUT_READ(regs_mod__mod__write__0_enLocal$OUT_READ));

  // submodule regs_mod__rf_0_0_mod__read__0_req__dataLocal
  mkWire #( /*width*/ 32'd20) regs_mod__rf_0_0_mod__read__0_req__dataLocal(.IN_WRITE(regs_mod__rf_0_0_mod__read__0_req__dataLocal$IN_WRITE),
									   .IN_EN_WRITE(regs_mod__rf_0_0_mod__read__0_req__dataLocal$IN_EN_WRITE),
									   .OUT_READ(regs_mod__rf_0_0_mod__read__0_req__dataLocal$OUT_READ));

  // submodule regs_mod__rf_0_0_mod__read__0_req__enLocal
  mkPulse regs_mod__rf_0_0_mod__read__0_req__enLocal(.IN_EN_WRITE(regs_mod__rf_0_0_mod__read__0_req__enLocal$IN_EN_WRITE),
						     .OUT_READ());

  // submodule regs_mod__rf_0_0_mod__read__0_resp__dataLocal
  mkWire #( /*width*/ 32'd32) regs_mod__rf_0_0_mod__read__0_resp__dataLocal(.IN_WRITE(regs_mod__rf_0_0_mod__read__0_resp__dataLocal$IN_WRITE),
									    .IN_EN_WRITE(regs_mod__rf_0_0_mod__read__0_resp__dataLocal$IN_EN_WRITE),
									    .OUT_READ(regs_mod__rf_0_0_mod__read__0_resp__dataLocal$OUT_READ));

  // submodule regs_mod__rf_0_0_mod__write__0_dataLocal
  mkWire #( /*width*/ 32'd52) regs_mod__rf_0_0_mod__write__0_dataLocal(.IN_WRITE(regs_mod__rf_0_0_mod__write__0_dataLocal$IN_WRITE),
								       .IN_EN_WRITE(regs_mod__rf_0_0_mod__write__0_dataLocal$IN_EN_WRITE),
								       .OUT_READ(regs_mod__rf_0_0_mod__write__0_dataLocal$OUT_READ));

  // submodule regs_mod__rf_0_0_mod__write__0_enLocal
  mkPulse regs_mod__rf_0_0_mod__write__0_enLocal(.IN_EN_WRITE(regs_mod__rf_0_0_mod__write__0_enLocal$IN_EN_WRITE),
						 .OUT_READ(regs_mod__rf_0_0_mod__write__0_enLocal$OUT_READ));

  // submodule regs_mod__rf_0_0_rf
  mkRegFileVerilogLoad #( /*width*/ 32'd32,
			  /*n*/ 32'd20,
			  /*size*/ 32'd1048576,
			  /*file*/ "../memory.vmh",
			  /*mode*/ 32'd2) regs_mod__rf_0_0_rf(.CLK(CLK),
							      .RST_N(RST_N),
							      .READ_REQ_WRITE(regs_mod__rf_0_0_rf$READ_REQ_WRITE),
							      .WRITE_DATA_WRITE(regs_mod__rf_0_0_rf$WRITE_DATA_WRITE),
							      .WRITE_INDEX_WRITE(regs_mod__rf_0_0_rf$WRITE_INDEX_WRITE),
							      .WRITE_EN_WRITE(regs_mod__rf_0_0_rf$WRITE_EN_WRITE),
							      .READ_RESP_READ(regs_mod__rf_0_0_rf$READ_RESP_READ));

  // submodule regs_mod__rf_0_1_mod__read__0_req__dataLocal
  mkWire #( /*width*/ 32'd20) regs_mod__rf_0_1_mod__read__0_req__dataLocal(.IN_WRITE(regs_mod__rf_0_1_mod__read__0_req__dataLocal$IN_WRITE),
									   .IN_EN_WRITE(regs_mod__rf_0_1_mod__read__0_req__dataLocal$IN_EN_WRITE),
									   .OUT_READ(regs_mod__rf_0_1_mod__read__0_req__dataLocal$OUT_READ));

  // submodule regs_mod__rf_0_1_mod__read__0_req__enLocal
  mkPulse regs_mod__rf_0_1_mod__read__0_req__enLocal(.IN_EN_WRITE(regs_mod__rf_0_1_mod__read__0_req__enLocal$IN_EN_WRITE),
						     .OUT_READ());

  // submodule regs_mod__rf_0_1_mod__read__0_resp__dataLocal
  mkWire #( /*width*/ 32'd32) regs_mod__rf_0_1_mod__read__0_resp__dataLocal(.IN_WRITE(regs_mod__rf_0_1_mod__read__0_resp__dataLocal$IN_WRITE),
									    .IN_EN_WRITE(regs_mod__rf_0_1_mod__read__0_resp__dataLocal$IN_EN_WRITE),
									    .OUT_READ(regs_mod__rf_0_1_mod__read__0_resp__dataLocal$OUT_READ));

  // submodule regs_mod__rf_0_1_mod__write__0_dataLocal
  mkWire #( /*width*/ 32'd52) regs_mod__rf_0_1_mod__write__0_dataLocal(.IN_WRITE(regs_mod__rf_0_1_mod__write__0_dataLocal$IN_WRITE),
								       .IN_EN_WRITE(regs_mod__rf_0_1_mod__write__0_dataLocal$IN_EN_WRITE),
								       .OUT_READ(regs_mod__rf_0_1_mod__write__0_dataLocal$OUT_READ));

  // submodule regs_mod__rf_0_1_mod__write__0_enLocal
  mkPulse regs_mod__rf_0_1_mod__write__0_enLocal(.IN_EN_WRITE(regs_mod__rf_0_1_mod__write__0_enLocal$IN_EN_WRITE),
						 .OUT_READ(regs_mod__rf_0_1_mod__write__0_enLocal$OUT_READ));

  // submodule regs_mod__rf_0_1_rf
  mkRegFileVerilogLoad #( /*width*/ 32'd32,
			  /*n*/ 32'd20,
			  /*size*/ 32'd1048576,
			  /*file*/ "../memory.vmh",
			  /*mode*/ 32'd2) regs_mod__rf_0_1_rf(.CLK(CLK),
							      .RST_N(RST_N),
							      .READ_REQ_WRITE(regs_mod__rf_0_1_rf$READ_REQ_WRITE),
							      .WRITE_DATA_WRITE(regs_mod__rf_0_1_rf$WRITE_DATA_WRITE),
							      .WRITE_INDEX_WRITE(regs_mod__rf_0_1_rf$WRITE_INDEX_WRITE),
							      .WRITE_EN_WRITE(regs_mod__rf_0_1_rf$WRITE_EN_WRITE),
							      .READ_RESP_READ(regs_mod__rf_0_1_rf$READ_RESP_READ));

  // submodule regs_mod__whichReg
  mkReg #( /*width*/ 32'd0) regs_mod__whichReg(.CLK(CLK),
					       .RST_N(RST_N),
					       .IN_EN_WRITE(regs_mod__whichReg$IN_EN_WRITE));

  // rule RL_r2
  assign WILL_FIRE_RL_r2 =
	     mod__dataReqQ__notEmpty__dataLocal$OUT_READ &&
	     (mod__dataReqQ__first__dataLocal$OUT_READ[64] ||
	      mod__dataQ__notFull__dataLocal$OUT_READ) ;

  // submodule mod__dataQ__enq__dataLocal
  assign mod__dataQ__enq__dataLocal$IN_WRITE =
	     regs_mod__mod__read__1_resp__dataLocal$OUT_READ ;
  assign mod__dataQ__enq__dataLocal$IN_EN_WRITE =
	     WILL_FIRE_RL_r2 &&
	     !mod__dataReqQ__first__dataLocal$OUT_READ[64] ;

  // submodule mod__dataQ__enq__enLocal
  assign mod__dataQ__enq__enLocal$IN_EN_WRITE =
	     WILL_FIRE_RL_r2 &&
	     !mod__dataReqQ__first__dataLocal$OUT_READ[64] ;

  // submodule mod__dataQ__notFull__dataLocal
  assign mod__dataQ__notFull__dataLocal$IN_WRITE = dataQ_notFull_WRITE ;
  assign mod__dataQ__notFull__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule mod__dataReqQ__deq__dataLocal
  assign mod__dataReqQ__deq__dataLocal$IN_EN_WRITE = WILL_FIRE_RL_r2 ;

  // submodule mod__dataReqQ__first__dataLocal
  assign mod__dataReqQ__first__dataLocal$IN_WRITE = dataReqQ_first_WRITE ;
  assign mod__dataReqQ__first__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule mod__dataReqQ__notEmpty__dataLocal
  assign mod__dataReqQ__notEmpty__dataLocal$IN_WRITE =
	     dataReqQ_notEmpty_WRITE ;
  assign mod__dataReqQ__notEmpty__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule mod__instQ__enq__dataLocal
  assign mod__instQ__enq__dataLocal$IN_WRITE =
	     regs_mod__mod__read__0_resp__dataLocal$OUT_READ ;
  assign mod__instQ__enq__dataLocal$IN_EN_WRITE =
	     mod__instReqQ__notEmpty__dataLocal$OUT_READ &&
	     mod__instQ__notFull__dataLocal$OUT_READ ;

  // submodule mod__instQ__enq__enLocal
  assign mod__instQ__enq__enLocal$IN_EN_WRITE =
	     mod__instReqQ__notEmpty__dataLocal$OUT_READ &&
	     mod__instQ__notFull__dataLocal$OUT_READ ;

  // submodule mod__instQ__notFull__dataLocal
  assign mod__instQ__notFull__dataLocal$IN_WRITE = instQ_notFull_WRITE ;
  assign mod__instQ__notFull__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule mod__instReqQ__deq__dataLocal
  assign mod__instReqQ__deq__dataLocal$IN_EN_WRITE =
	     mod__instReqQ__notEmpty__dataLocal$OUT_READ &&
	     mod__instQ__notFull__dataLocal$OUT_READ ;

  // submodule mod__instReqQ__first__dataLocal
  assign mod__instReqQ__first__dataLocal$IN_WRITE = instReqQ_first_WRITE ;
  assign mod__instReqQ__first__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule mod__instReqQ__notEmpty__dataLocal
  assign mod__instReqQ__notEmpty__dataLocal$IN_WRITE =
	     instReqQ_notEmpty_WRITE ;
  assign mod__instReqQ__notEmpty__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule regs_mod__mod__read__0_req__dataLocal
  assign regs_mod__mod__read__0_req__dataLocal$IN_WRITE =
	     mod__instReqQ__first__dataLocal$OUT_READ[21:2] ;
  assign regs_mod__mod__read__0_req__dataLocal$IN_EN_WRITE =
	     mod__instReqQ__notEmpty__dataLocal$OUT_READ &&
	     mod__instQ__notFull__dataLocal$OUT_READ ;

  // submodule regs_mod__mod__read__0_req__enLocal
  assign regs_mod__mod__read__0_req__enLocal$IN_EN_WRITE =
	     mod__instReqQ__notEmpty__dataLocal$OUT_READ &&
	     mod__instQ__notFull__dataLocal$OUT_READ ;

  // submodule regs_mod__mod__read__0_resp__dataLocal
  assign regs_mod__mod__read__0_resp__dataLocal$IN_WRITE =
	     regs_mod__rf_0_0_mod__read__0_resp__dataLocal$OUT_READ ;
  assign regs_mod__mod__read__0_resp__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule regs_mod__mod__read__1_req__dataLocal
  assign regs_mod__mod__read__1_req__dataLocal$IN_WRITE =
	     mod__dataReqQ__first__dataLocal$OUT_READ[21:2] ;
  assign regs_mod__mod__read__1_req__dataLocal$IN_EN_WRITE =
	     WILL_FIRE_RL_r2 &&
	     !mod__dataReqQ__first__dataLocal$OUT_READ[64] ;

  // submodule regs_mod__mod__read__1_req__enLocal
  assign regs_mod__mod__read__1_req__enLocal$IN_EN_WRITE =
	     WILL_FIRE_RL_r2 &&
	     !mod__dataReqQ__first__dataLocal$OUT_READ[64] ;

  // submodule regs_mod__mod__read__1_resp__dataLocal
  assign regs_mod__mod__read__1_resp__dataLocal$IN_WRITE =
	     regs_mod__rf_0_1_mod__read__0_resp__dataLocal$OUT_READ ;
  assign regs_mod__mod__read__1_resp__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule regs_mod__mod__write__0_dataLocal
  assign regs_mod__mod__write__0_dataLocal$IN_WRITE =
	     { mod__dataReqQ__first__dataLocal$OUT_READ[53:34],
	       mod__dataReqQ__first__dataLocal$OUT_READ[31:0] } ;
  assign regs_mod__mod__write__0_dataLocal$IN_EN_WRITE =
	     WILL_FIRE_RL_r2 && mod__dataReqQ__first__dataLocal$OUT_READ[64] ;

  // submodule regs_mod__mod__write__0_enLocal
  assign regs_mod__mod__write__0_enLocal$IN_EN_WRITE =
	     WILL_FIRE_RL_r2 && mod__dataReqQ__first__dataLocal$OUT_READ[64] ;

  // submodule regs_mod__rf_0_0_mod__read__0_req__dataLocal
  assign regs_mod__rf_0_0_mod__read__0_req__dataLocal$IN_WRITE =
	     regs_mod__mod__read__0_req__dataLocal$OUT_READ ;
  assign regs_mod__rf_0_0_mod__read__0_req__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule regs_mod__rf_0_0_mod__read__0_req__enLocal
  assign regs_mod__rf_0_0_mod__read__0_req__enLocal$IN_EN_WRITE = 1'd1 ;

  // submodule regs_mod__rf_0_0_mod__read__0_resp__dataLocal
  assign regs_mod__rf_0_0_mod__read__0_resp__dataLocal$IN_WRITE =
	     regs_mod__rf_0_0_rf$READ_RESP_READ ;
  assign regs_mod__rf_0_0_mod__read__0_resp__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule regs_mod__rf_0_0_mod__write__0_dataLocal
  assign regs_mod__rf_0_0_mod__write__0_dataLocal$IN_WRITE =
	     regs_mod__mod__write__0_dataLocal$OUT_READ ;
  assign regs_mod__rf_0_0_mod__write__0_dataLocal$IN_EN_WRITE =
	     regs_mod__mod__write__0_enLocal$OUT_READ ;

  // submodule regs_mod__rf_0_0_mod__write__0_enLocal
  assign regs_mod__rf_0_0_mod__write__0_enLocal$IN_EN_WRITE =
	     regs_mod__mod__write__0_enLocal$OUT_READ ;

  // submodule regs_mod__rf_0_0_rf
  assign regs_mod__rf_0_0_rf$READ_REQ_WRITE =
	     regs_mod__rf_0_0_mod__read__0_req__dataLocal$OUT_READ ;
  assign regs_mod__rf_0_0_rf$WRITE_DATA_WRITE =
	     regs_mod__rf_0_0_mod__write__0_dataLocal$OUT_READ[31:0] ;
  assign regs_mod__rf_0_0_rf$WRITE_INDEX_WRITE =
	     regs_mod__rf_0_0_mod__write__0_dataLocal$OUT_READ[51:32] ;
  assign regs_mod__rf_0_0_rf$WRITE_EN_WRITE =
	     regs_mod__rf_0_0_mod__write__0_enLocal$OUT_READ ;

  // submodule regs_mod__rf_0_1_mod__read__0_req__dataLocal
  assign regs_mod__rf_0_1_mod__read__0_req__dataLocal$IN_WRITE =
	     regs_mod__mod__read__1_req__dataLocal$OUT_READ ;
  assign regs_mod__rf_0_1_mod__read__0_req__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule regs_mod__rf_0_1_mod__read__0_req__enLocal
  assign regs_mod__rf_0_1_mod__read__0_req__enLocal$IN_EN_WRITE = 1'd1 ;

  // submodule regs_mod__rf_0_1_mod__read__0_resp__dataLocal
  assign regs_mod__rf_0_1_mod__read__0_resp__dataLocal$IN_WRITE =
	     regs_mod__rf_0_1_rf$READ_RESP_READ ;
  assign regs_mod__rf_0_1_mod__read__0_resp__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule regs_mod__rf_0_1_mod__write__0_dataLocal
  assign regs_mod__rf_0_1_mod__write__0_dataLocal$IN_WRITE =
	     regs_mod__mod__write__0_dataLocal$OUT_READ ;
  assign regs_mod__rf_0_1_mod__write__0_dataLocal$IN_EN_WRITE =
	     regs_mod__mod__write__0_enLocal$OUT_READ ;

  // submodule regs_mod__rf_0_1_mod__write__0_enLocal
  assign regs_mod__rf_0_1_mod__write__0_enLocal$IN_EN_WRITE =
	     regs_mod__mod__write__0_enLocal$OUT_READ ;

  // submodule regs_mod__rf_0_1_rf
  assign regs_mod__rf_0_1_rf$READ_REQ_WRITE =
	     regs_mod__rf_0_1_mod__read__0_req__dataLocal$OUT_READ ;
  assign regs_mod__rf_0_1_rf$WRITE_DATA_WRITE =
	     regs_mod__rf_0_1_mod__write__0_dataLocal$OUT_READ[31:0] ;
  assign regs_mod__rf_0_1_rf$WRITE_INDEX_WRITE =
	     regs_mod__rf_0_1_mod__write__0_dataLocal$OUT_READ[51:32] ;
  assign regs_mod__rf_0_1_rf$WRITE_EN_WRITE =
	     regs_mod__rf_0_1_mod__write__0_enLocal$OUT_READ ;

  // submodule regs_mod__whichReg
  assign regs_mod__whichReg$IN_EN_WRITE = 1'd1 ;
endmodule  // mkMemory

