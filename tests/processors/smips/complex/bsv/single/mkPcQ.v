//
// Generated by Bluespec Compiler, version 2014.03.beta2 (build 33633, 2014-03-26)
//
// On Fri Nov 21 15:38:11 EST 2014
//
//
// Ports:
// Name                         I/O  size props
// enq_notFull_READ               O     1
// deq_notEmpty_READ              O     1
// deq_first_READ                 O    33
// CLK                            I     1 clock
// RST_N                          I     1 reset
// enq_enq_WRITE                  I    33
// enq_enq_EN_WRITE               I     1
// deq_deq_WRITE                  I     1
//
// Combinational paths from inputs to outputs:
//   deq_deq_WRITE -> enq_notFull_READ
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkPcQ(CLK,
	     RST_N,

	     enq_notFull_READ,

	     enq_enq_WRITE,
	     enq_enq_EN_WRITE,

	     deq_notEmpty_READ,

	     deq_first_READ,

	     deq_deq_WRITE);
  input  CLK;
  input  RST_N;

  // value method enq_notFull__read
  output enq_notFull_READ;

  // action method enq_enq_write
  input  [32 : 0] enq_enq_WRITE;
  input  enq_enq_EN_WRITE;

  // value method deq_notEmpty__read
  output deq_notEmpty_READ;

  // value method deq_first__read
  output [32 : 0] deq_first_READ;

  // action method deq_deq__read
  input  deq_deq_WRITE;

  // signals for module outputs
  wire [32 : 0] deq_first_READ;
  wire deq_notEmpty_READ, enq_notFull_READ;

  // ports of submodule mod__mod__f_head
  wire [1 : 0] mod__mod__f_head$IN_WRITE, mod__mod__f_head$OUT_READ;
  wire mod__mod__f_head$IN_EN_WRITE;

  // ports of submodule mod__mod__f_mod__clear__dataLocal
  wire mod__mod__f_mod__clear__dataLocal$IN_EN_WRITE,
       mod__mod__f_mod__clear__dataLocal$OUT_READ;

  // ports of submodule mod__mod__f_mod__deq__data__0_dataLocal
  wire [32 : 0] mod__mod__f_mod__deq__data__0_dataLocal$IN_WRITE,
		mod__mod__f_mod__deq__data__0_dataLocal$OUT_READ;
  wire mod__mod__f_mod__deq__data__0_dataLocal$IN_EN_WRITE;

  // ports of submodule mod__mod__f_mod__deq__data__0_enLocal
  wire mod__mod__f_mod__deq__data__0_enLocal$IN_EN_WRITE;

  // ports of submodule mod__mod__f_mod__deq__numDeqs__dataLocal
  wire [1 : 0] mod__mod__f_mod__deq__numDeqs__dataLocal$IN_WRITE,
	       mod__mod__f_mod__deq__numDeqs__dataLocal$OUT_READ;
  wire mod__mod__f_mod__deq__numDeqs__dataLocal$IN_EN_WRITE;

  // ports of submodule mod__mod__f_mod__deq__numDeqs__enLocal
  wire mod__mod__f_mod__deq__numDeqs__enLocal$IN_EN_WRITE,
       mod__mod__f_mod__deq__numDeqs__enLocal$OUT_READ;

  // ports of submodule mod__mod__f_mod__deq__numFilledSlots__dataLocal
  wire [1 : 0] mod__mod__f_mod__deq__numFilledSlots__dataLocal$IN_WRITE,
	       mod__mod__f_mod__deq__numFilledSlots__dataLocal$OUT_READ;
  wire mod__mod__f_mod__deq__numFilledSlots__dataLocal$IN_EN_WRITE;

  // ports of submodule mod__mod__f_mod__enq__data__0_dataLocal
  wire [32 : 0] mod__mod__f_mod__enq__data__0_dataLocal$IN_WRITE,
		mod__mod__f_mod__enq__data__0_dataLocal$OUT_READ;
  wire mod__mod__f_mod__enq__data__0_dataLocal$IN_EN_WRITE;

  // ports of submodule mod__mod__f_mod__enq__data__0_enLocal
  wire mod__mod__f_mod__enq__data__0_enLocal$IN_EN_WRITE,
       mod__mod__f_mod__enq__data__0_enLocal$OUT_READ;

  // ports of submodule mod__mod__f_mod__enq__numFreeSlots__dataLocal
  wire [1 : 0] mod__mod__f_mod__enq__numFreeSlots__dataLocal$IN_WRITE,
	       mod__mod__f_mod__enq__numFreeSlots__dataLocal$OUT_READ;
  wire mod__mod__f_mod__enq__numFreeSlots__dataLocal$IN_EN_WRITE;

  // ports of submodule mod__mod__f_numElems
  wire [1 : 0] mod__mod__f_numElems$IN_WRITE, mod__mod__f_numElems$OUT_READ;
  wire mod__mod__f_numElems$IN_EN_WRITE;

  // ports of submodule mod__mod__f_rf_mod__mod__read__0_req__dataLocal
  wire [1 : 0] mod__mod__f_rf_mod__mod__read__0_req__dataLocal$IN_WRITE,
	       mod__mod__f_rf_mod__mod__read__0_req__dataLocal$OUT_READ;
  wire mod__mod__f_rf_mod__mod__read__0_req__dataLocal$IN_EN_WRITE;

  // ports of submodule mod__mod__f_rf_mod__mod__read__0_req__enLocal
  wire mod__mod__f_rf_mod__mod__read__0_req__enLocal$IN_EN_WRITE;

  // ports of submodule mod__mod__f_rf_mod__mod__read__0_resp__dataLocal
  wire [32 : 0] mod__mod__f_rf_mod__mod__read__0_resp__dataLocal$IN_WRITE,
		mod__mod__f_rf_mod__mod__read__0_resp__dataLocal$OUT_READ;
  wire mod__mod__f_rf_mod__mod__read__0_resp__dataLocal$IN_EN_WRITE;

  // ports of submodule mod__mod__f_rf_mod__mod__write__0_dataLocal
  wire [34 : 0] mod__mod__f_rf_mod__mod__write__0_dataLocal$IN_WRITE,
		mod__mod__f_rf_mod__mod__write__0_dataLocal$OUT_READ;
  wire mod__mod__f_rf_mod__mod__write__0_dataLocal$IN_EN_WRITE;

  // ports of submodule mod__mod__f_rf_mod__mod__write__0_enLocal
  wire mod__mod__f_rf_mod__mod__write__0_enLocal$IN_EN_WRITE,
       mod__mod__f_rf_mod__mod__write__0_enLocal$OUT_READ;

  // ports of submodule mod__mod__f_rf_mod__rf_0_0_mod__read__0_req__dataLocal
  wire [1 : 0] mod__mod__f_rf_mod__rf_0_0_mod__read__0_req__dataLocal$IN_WRITE,
	       mod__mod__f_rf_mod__rf_0_0_mod__read__0_req__dataLocal$OUT_READ;
  wire mod__mod__f_rf_mod__rf_0_0_mod__read__0_req__dataLocal$IN_EN_WRITE;

  // ports of submodule mod__mod__f_rf_mod__rf_0_0_mod__read__0_req__enLocal
  wire mod__mod__f_rf_mod__rf_0_0_mod__read__0_req__enLocal$IN_EN_WRITE;

  // ports of submodule mod__mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal
  wire [32 : 0] mod__mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal$IN_WRITE,
		mod__mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal$OUT_READ;
  wire mod__mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal$IN_EN_WRITE;

  // ports of submodule mod__mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal
  wire [34 : 0] mod__mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal$IN_WRITE,
		mod__mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal$OUT_READ;
  wire mod__mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal$IN_EN_WRITE;

  // ports of submodule mod__mod__f_rf_mod__rf_0_0_mod__write__0_enLocal
  wire mod__mod__f_rf_mod__rf_0_0_mod__write__0_enLocal$IN_EN_WRITE,
       mod__mod__f_rf_mod__rf_0_0_mod__write__0_enLocal$OUT_READ;

  // ports of submodule mod__mod__f_rf_mod__rf_0_0_rf
  wire [32 : 0] mod__mod__f_rf_mod__rf_0_0_rf$READ_RESP_READ,
		mod__mod__f_rf_mod__rf_0_0_rf$WRITE_DATA_WRITE;
  wire [1 : 0] mod__mod__f_rf_mod__rf_0_0_rf$READ_REQ_WRITE,
	       mod__mod__f_rf_mod__rf_0_0_rf$WRITE_INDEX_WRITE;
  wire mod__mod__f_rf_mod__rf_0_0_rf$WRITE_EN_WRITE;

  // ports of submodule mod__mod__f_rf_mod__whichReg
  wire mod__mod__f_rf_mod__whichReg$IN_EN_WRITE;

  // ports of submodule mod__mod__f_tail
  wire [1 : 0] mod__mod__f_tail$IN_WRITE, mod__mod__f_tail$OUT_READ;
  wire mod__mod__f_tail$IN_EN_WRITE;

  // ports of submodule mod__mod__mod__deq__deq__dataLocal
  wire mod__mod__mod__deq__deq__dataLocal$IN_EN_WRITE,
       mod__mod__mod__deq__deq__dataLocal$OUT_READ;

  // ports of submodule mod__mod__mod__deq__first__dataLocal
  wire [32 : 0] mod__mod__mod__deq__first__dataLocal$IN_WRITE,
		mod__mod__mod__deq__first__dataLocal$OUT_READ;
  wire mod__mod__mod__deq__first__dataLocal$IN_EN_WRITE;

  // ports of submodule mod__mod__mod__deq__notEmpty__dataLocal
  wire mod__mod__mod__deq__notEmpty__dataLocal$IN_EN_WRITE,
       mod__mod__mod__deq__notEmpty__dataLocal$IN_WRITE,
       mod__mod__mod__deq__notEmpty__dataLocal$OUT_READ;

  // ports of submodule mod__mod__mod__enq__enq__dataLocal
  wire [32 : 0] mod__mod__mod__enq__enq__dataLocal$IN_WRITE,
		mod__mod__mod__enq__enq__dataLocal$OUT_READ;
  wire mod__mod__mod__enq__enq__dataLocal$IN_EN_WRITE;

  // ports of submodule mod__mod__mod__enq__enq__enLocal
  wire mod__mod__mod__enq__enq__enLocal$IN_EN_WRITE,
       mod__mod__mod__enq__enq__enLocal$OUT_READ;

  // ports of submodule mod__mod__mod__enq__notFull__dataLocal
  wire mod__mod__mod__enq__notFull__dataLocal$IN_EN_WRITE,
       mod__mod__mod__enq__notFull__dataLocal$IN_WRITE,
       mod__mod__mod__enq__notFull__dataLocal$OUT_READ;

  // remaining internal signals
  wire [1 : 0] _theResult_____1__h5261,
	       mod__mod__f_head__read__2_PLUS_IF_mod__mod__f__ETC___d20,
	       mod__mod__f_tail__read__1_PLUS_IF_mod__mod__f__ETC___d38,
	       v__h3290,
	       x__h3513,
	       x__h4421,
	       y__h5678;

  // value method enq_notFull__read
  assign enq_notFull_READ = mod__mod__mod__enq__notFull__dataLocal$OUT_READ ;

  // value method deq_notEmpty__read
  assign deq_notEmpty_READ =
	     mod__mod__mod__deq__notEmpty__dataLocal$OUT_READ ;

  // value method deq_first__read
  assign deq_first_READ = mod__mod__mod__deq__first__dataLocal$OUT_READ ;

  // submodule mod__mod__f_head
  mkReg #( /*width*/ 32'd2,  /*init*/ 2'd0) mod__mod__f_head(.CLK(CLK),
							     .RST_N(RST_N),
							     .IN_WRITE(mod__mod__f_head$IN_WRITE),
							     .IN_EN_WRITE(mod__mod__f_head$IN_EN_WRITE),
							     .OUT_READ(mod__mod__f_head$OUT_READ));

  // submodule mod__mod__f_mod__clear__dataLocal
  mkPulse mod__mod__f_mod__clear__dataLocal(.IN_EN_WRITE(mod__mod__f_mod__clear__dataLocal$IN_EN_WRITE),
					    .OUT_READ(mod__mod__f_mod__clear__dataLocal$OUT_READ));

  // submodule mod__mod__f_mod__deq__data__0_dataLocal
  mkWire #( /*width*/ 32'd33) mod__mod__f_mod__deq__data__0_dataLocal(.IN_WRITE(mod__mod__f_mod__deq__data__0_dataLocal$IN_WRITE),
								      .IN_EN_WRITE(mod__mod__f_mod__deq__data__0_dataLocal$IN_EN_WRITE),
								      .OUT_READ(mod__mod__f_mod__deq__data__0_dataLocal$OUT_READ));

  // submodule mod__mod__f_mod__deq__data__0_enLocal
  mkPulse mod__mod__f_mod__deq__data__0_enLocal(.IN_EN_WRITE(mod__mod__f_mod__deq__data__0_enLocal$IN_EN_WRITE),
						.OUT_READ());

  // submodule mod__mod__f_mod__deq__numDeqs__dataLocal
  mkWire #( /*width*/ 32'd2) mod__mod__f_mod__deq__numDeqs__dataLocal(.IN_WRITE(mod__mod__f_mod__deq__numDeqs__dataLocal$IN_WRITE),
								      .IN_EN_WRITE(mod__mod__f_mod__deq__numDeqs__dataLocal$IN_EN_WRITE),
								      .OUT_READ(mod__mod__f_mod__deq__numDeqs__dataLocal$OUT_READ));

  // submodule mod__mod__f_mod__deq__numDeqs__enLocal
  mkPulse mod__mod__f_mod__deq__numDeqs__enLocal(.IN_EN_WRITE(mod__mod__f_mod__deq__numDeqs__enLocal$IN_EN_WRITE),
						 .OUT_READ(mod__mod__f_mod__deq__numDeqs__enLocal$OUT_READ));

  // submodule mod__mod__f_mod__deq__numFilledSlots__dataLocal
  mkWire #( /*width*/ 32'd2) mod__mod__f_mod__deq__numFilledSlots__dataLocal(.IN_WRITE(mod__mod__f_mod__deq__numFilledSlots__dataLocal$IN_WRITE),
									     .IN_EN_WRITE(mod__mod__f_mod__deq__numFilledSlots__dataLocal$IN_EN_WRITE),
									     .OUT_READ(mod__mod__f_mod__deq__numFilledSlots__dataLocal$OUT_READ));

  // submodule mod__mod__f_mod__enq__data__0_dataLocal
  mkWire #( /*width*/ 32'd33) mod__mod__f_mod__enq__data__0_dataLocal(.IN_WRITE(mod__mod__f_mod__enq__data__0_dataLocal$IN_WRITE),
								      .IN_EN_WRITE(mod__mod__f_mod__enq__data__0_dataLocal$IN_EN_WRITE),
								      .OUT_READ(mod__mod__f_mod__enq__data__0_dataLocal$OUT_READ));

  // submodule mod__mod__f_mod__enq__data__0_enLocal
  mkPulse mod__mod__f_mod__enq__data__0_enLocal(.IN_EN_WRITE(mod__mod__f_mod__enq__data__0_enLocal$IN_EN_WRITE),
						.OUT_READ(mod__mod__f_mod__enq__data__0_enLocal$OUT_READ));

  // submodule mod__mod__f_mod__enq__numFreeSlots__dataLocal
  mkWire #( /*width*/ 32'd2) mod__mod__f_mod__enq__numFreeSlots__dataLocal(.IN_WRITE(mod__mod__f_mod__enq__numFreeSlots__dataLocal$IN_WRITE),
									   .IN_EN_WRITE(mod__mod__f_mod__enq__numFreeSlots__dataLocal$IN_EN_WRITE),
									   .OUT_READ(mod__mod__f_mod__enq__numFreeSlots__dataLocal$OUT_READ));

  // submodule mod__mod__f_numElems
  mkReg #( /*width*/ 32'd2,  /*init*/ 2'd0) mod__mod__f_numElems(.CLK(CLK),
								 .RST_N(RST_N),
								 .IN_WRITE(mod__mod__f_numElems$IN_WRITE),
								 .IN_EN_WRITE(mod__mod__f_numElems$IN_EN_WRITE),
								 .OUT_READ(mod__mod__f_numElems$OUT_READ));

  // submodule mod__mod__f_rf_mod__mod__read__0_req__dataLocal
  mkWire #( /*width*/ 32'd2) mod__mod__f_rf_mod__mod__read__0_req__dataLocal(.IN_WRITE(mod__mod__f_rf_mod__mod__read__0_req__dataLocal$IN_WRITE),
									     .IN_EN_WRITE(mod__mod__f_rf_mod__mod__read__0_req__dataLocal$IN_EN_WRITE),
									     .OUT_READ(mod__mod__f_rf_mod__mod__read__0_req__dataLocal$OUT_READ));

  // submodule mod__mod__f_rf_mod__mod__read__0_req__enLocal
  mkPulse mod__mod__f_rf_mod__mod__read__0_req__enLocal(.IN_EN_WRITE(mod__mod__f_rf_mod__mod__read__0_req__enLocal$IN_EN_WRITE),
							.OUT_READ());

  // submodule mod__mod__f_rf_mod__mod__read__0_resp__dataLocal
  mkWire #( /*width*/ 32'd33) mod__mod__f_rf_mod__mod__read__0_resp__dataLocal(.IN_WRITE(mod__mod__f_rf_mod__mod__read__0_resp__dataLocal$IN_WRITE),
									       .IN_EN_WRITE(mod__mod__f_rf_mod__mod__read__0_resp__dataLocal$IN_EN_WRITE),
									       .OUT_READ(mod__mod__f_rf_mod__mod__read__0_resp__dataLocal$OUT_READ));

  // submodule mod__mod__f_rf_mod__mod__write__0_dataLocal
  mkWire #( /*width*/ 32'd35) mod__mod__f_rf_mod__mod__write__0_dataLocal(.IN_WRITE(mod__mod__f_rf_mod__mod__write__0_dataLocal$IN_WRITE),
									  .IN_EN_WRITE(mod__mod__f_rf_mod__mod__write__0_dataLocal$IN_EN_WRITE),
									  .OUT_READ(mod__mod__f_rf_mod__mod__write__0_dataLocal$OUT_READ));

  // submodule mod__mod__f_rf_mod__mod__write__0_enLocal
  mkPulse mod__mod__f_rf_mod__mod__write__0_enLocal(.IN_EN_WRITE(mod__mod__f_rf_mod__mod__write__0_enLocal$IN_EN_WRITE),
						    .OUT_READ(mod__mod__f_rf_mod__mod__write__0_enLocal$OUT_READ));

  // submodule mod__mod__f_rf_mod__rf_0_0_mod__read__0_req__dataLocal
  mkWire #( /*width*/ 32'd2) mod__mod__f_rf_mod__rf_0_0_mod__read__0_req__dataLocal(.IN_WRITE(mod__mod__f_rf_mod__rf_0_0_mod__read__0_req__dataLocal$IN_WRITE),
										    .IN_EN_WRITE(mod__mod__f_rf_mod__rf_0_0_mod__read__0_req__dataLocal$IN_EN_WRITE),
										    .OUT_READ(mod__mod__f_rf_mod__rf_0_0_mod__read__0_req__dataLocal$OUT_READ));

  // submodule mod__mod__f_rf_mod__rf_0_0_mod__read__0_req__enLocal
  mkPulse mod__mod__f_rf_mod__rf_0_0_mod__read__0_req__enLocal(.IN_EN_WRITE(mod__mod__f_rf_mod__rf_0_0_mod__read__0_req__enLocal$IN_EN_WRITE),
							       .OUT_READ());

  // submodule mod__mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal
  mkWire #( /*width*/ 32'd33) mod__mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal(.IN_WRITE(mod__mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal$IN_WRITE),
										      .IN_EN_WRITE(mod__mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal$IN_EN_WRITE),
										      .OUT_READ(mod__mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal$OUT_READ));

  // submodule mod__mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal
  mkWire #( /*width*/ 32'd35) mod__mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal(.IN_WRITE(mod__mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal$IN_WRITE),
										 .IN_EN_WRITE(mod__mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal$IN_EN_WRITE),
										 .OUT_READ(mod__mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal$OUT_READ));

  // submodule mod__mod__f_rf_mod__rf_0_0_mod__write__0_enLocal
  mkPulse mod__mod__f_rf_mod__rf_0_0_mod__write__0_enLocal(.IN_EN_WRITE(mod__mod__f_rf_mod__rf_0_0_mod__write__0_enLocal$IN_EN_WRITE),
							   .OUT_READ(mod__mod__f_rf_mod__rf_0_0_mod__write__0_enLocal$OUT_READ));

  // submodule mod__mod__f_rf_mod__rf_0_0_rf
  mkRegFileVerilogLoad #( /*width*/ 32'd33,
			  /*n*/ 32'd2,
			  /*size*/ 32'd3,
			  /*file*/ "",
			  /*mode*/ 32'd0) mod__mod__f_rf_mod__rf_0_0_rf(.CLK(CLK),
									.RST_N(RST_N),
									.READ_REQ_WRITE(mod__mod__f_rf_mod__rf_0_0_rf$READ_REQ_WRITE),
									.WRITE_DATA_WRITE(mod__mod__f_rf_mod__rf_0_0_rf$WRITE_DATA_WRITE),
									.WRITE_INDEX_WRITE(mod__mod__f_rf_mod__rf_0_0_rf$WRITE_INDEX_WRITE),
									.WRITE_EN_WRITE(mod__mod__f_rf_mod__rf_0_0_rf$WRITE_EN_WRITE),
									.READ_RESP_READ(mod__mod__f_rf_mod__rf_0_0_rf$READ_RESP_READ));

  // submodule mod__mod__f_rf_mod__whichReg
  mkReg #( /*width*/ 32'd0) mod__mod__f_rf_mod__whichReg(.CLK(CLK),
							 .RST_N(RST_N),
							 .IN_EN_WRITE(mod__mod__f_rf_mod__whichReg$IN_EN_WRITE));

  // submodule mod__mod__f_tail
  mkReg #( /*width*/ 32'd2,  /*init*/ 2'd0) mod__mod__f_tail(.CLK(CLK),
							     .RST_N(RST_N),
							     .IN_WRITE(mod__mod__f_tail$IN_WRITE),
							     .IN_EN_WRITE(mod__mod__f_tail$IN_EN_WRITE),
							     .OUT_READ(mod__mod__f_tail$OUT_READ));

  // submodule mod__mod__mod__deq__deq__dataLocal
  mkPulse mod__mod__mod__deq__deq__dataLocal(.IN_EN_WRITE(mod__mod__mod__deq__deq__dataLocal$IN_EN_WRITE),
					     .OUT_READ(mod__mod__mod__deq__deq__dataLocal$OUT_READ));

  // submodule mod__mod__mod__deq__first__dataLocal
  mkWire #( /*width*/ 32'd33) mod__mod__mod__deq__first__dataLocal(.IN_WRITE(mod__mod__mod__deq__first__dataLocal$IN_WRITE),
								   .IN_EN_WRITE(mod__mod__mod__deq__first__dataLocal$IN_EN_WRITE),
								   .OUT_READ(mod__mod__mod__deq__first__dataLocal$OUT_READ));

  // submodule mod__mod__mod__deq__notEmpty__dataLocal
  mkWire #( /*width*/ 32'd1) mod__mod__mod__deq__notEmpty__dataLocal(.IN_WRITE(mod__mod__mod__deq__notEmpty__dataLocal$IN_WRITE),
								     .IN_EN_WRITE(mod__mod__mod__deq__notEmpty__dataLocal$IN_EN_WRITE),
								     .OUT_READ(mod__mod__mod__deq__notEmpty__dataLocal$OUT_READ));

  // submodule mod__mod__mod__enq__enq__dataLocal
  mkWire #( /*width*/ 32'd33) mod__mod__mod__enq__enq__dataLocal(.IN_WRITE(mod__mod__mod__enq__enq__dataLocal$IN_WRITE),
								 .IN_EN_WRITE(mod__mod__mod__enq__enq__dataLocal$IN_EN_WRITE),
								 .OUT_READ(mod__mod__mod__enq__enq__dataLocal$OUT_READ));

  // submodule mod__mod__mod__enq__enq__enLocal
  mkPulse mod__mod__mod__enq__enq__enLocal(.IN_EN_WRITE(mod__mod__mod__enq__enq__enLocal$IN_EN_WRITE),
					   .OUT_READ(mod__mod__mod__enq__enq__enLocal$OUT_READ));

  // submodule mod__mod__mod__enq__notFull__dataLocal
  mkWire #( /*width*/ 32'd1) mod__mod__mod__enq__notFull__dataLocal(.IN_WRITE(mod__mod__mod__enq__notFull__dataLocal$IN_WRITE),
								    .IN_EN_WRITE(mod__mod__mod__enq__notFull__dataLocal$IN_EN_WRITE),
								    .OUT_READ(mod__mod__mod__enq__notFull__dataLocal$OUT_READ));

  // submodule mod__mod__f_head
  assign mod__mod__f_head$IN_WRITE =
	     mod__mod__f_mod__clear__dataLocal$OUT_READ ?
	       2'd0 :
	       ((mod__mod__f_head__read__2_PLUS_IF_mod__mod__f__ETC___d20 ==
		 2'd3) ?
		  mod__mod__f_head__read__2_PLUS_IF_mod__mod__f__ETC___d20 -
		  2'd3 :
		  mod__mod__f_head__read__2_PLUS_IF_mod__mod__f__ETC___d20) ;
  assign mod__mod__f_head$IN_EN_WRITE = 1'd1 ;

  // submodule mod__mod__f_mod__clear__dataLocal
  assign mod__mod__f_mod__clear__dataLocal$IN_EN_WRITE = 1'b0 ;

  // submodule mod__mod__f_mod__deq__data__0_dataLocal
  assign mod__mod__f_mod__deq__data__0_dataLocal$IN_WRITE =
	     mod__mod__f_rf_mod__mod__read__0_resp__dataLocal$OUT_READ ;
  assign mod__mod__f_mod__deq__data__0_dataLocal$IN_EN_WRITE =
	     mod__mod__f_numElems$OUT_READ != 2'd0 ;

  // submodule mod__mod__f_mod__deq__data__0_enLocal
  assign mod__mod__f_mod__deq__data__0_enLocal$IN_EN_WRITE =
	     mod__mod__f_numElems$OUT_READ != 2'd0 ;

  // submodule mod__mod__f_mod__deq__numDeqs__dataLocal
  assign mod__mod__f_mod__deq__numDeqs__dataLocal$IN_WRITE =
	     mod__mod__mod__deq__deq__dataLocal$OUT_READ ? 2'd1 : 2'd0 ;
  assign mod__mod__f_mod__deq__numDeqs__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule mod__mod__f_mod__deq__numDeqs__enLocal
  assign mod__mod__f_mod__deq__numDeqs__enLocal$IN_EN_WRITE = 1'd1 ;

  // submodule mod__mod__f_mod__deq__numFilledSlots__dataLocal
  assign mod__mod__f_mod__deq__numFilledSlots__dataLocal$IN_WRITE =
	     mod__mod__f_numElems$OUT_READ ;
  assign mod__mod__f_mod__deq__numFilledSlots__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule mod__mod__f_mod__enq__data__0_dataLocal
  assign mod__mod__f_mod__enq__data__0_dataLocal$IN_WRITE =
	     mod__mod__mod__enq__enq__dataLocal$OUT_READ ;
  assign mod__mod__f_mod__enq__data__0_dataLocal$IN_EN_WRITE =
	     mod__mod__mod__enq__enq__enLocal$OUT_READ ;

  // submodule mod__mod__f_mod__enq__data__0_enLocal
  assign mod__mod__f_mod__enq__data__0_enLocal$IN_EN_WRITE =
	     mod__mod__mod__enq__enq__enLocal$OUT_READ ;

  // submodule mod__mod__f_mod__enq__numFreeSlots__dataLocal
  assign mod__mod__f_mod__enq__numFreeSlots__dataLocal$IN_WRITE =
	     x__h4421 + mod__mod__f_mod__deq__numDeqs__dataLocal$OUT_READ ;
  assign mod__mod__f_mod__enq__numFreeSlots__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule mod__mod__f_numElems
  assign mod__mod__f_numElems$IN_WRITE =
	     mod__mod__f_mod__clear__dataLocal$OUT_READ ?
	       2'd0 :
	       mod__mod__f_numElems$OUT_READ + y__h5678 ;
  assign mod__mod__f_numElems$IN_EN_WRITE = 1'd1 ;

  // submodule mod__mod__f_rf_mod__mod__read__0_req__dataLocal
  assign mod__mod__f_rf_mod__mod__read__0_req__dataLocal$IN_WRITE =
	     (mod__mod__f_tail$OUT_READ == 2'd3) ?
	       mod__mod__f_tail$OUT_READ - 2'd3 :
	       mod__mod__f_tail$OUT_READ ;
  assign mod__mod__f_rf_mod__mod__read__0_req__dataLocal$IN_EN_WRITE =
	     mod__mod__f_numElems$OUT_READ != 2'd0 ;

  // submodule mod__mod__f_rf_mod__mod__read__0_req__enLocal
  assign mod__mod__f_rf_mod__mod__read__0_req__enLocal$IN_EN_WRITE =
	     mod__mod__f_numElems$OUT_READ != 2'd0 ;

  // submodule mod__mod__f_rf_mod__mod__read__0_resp__dataLocal
  assign mod__mod__f_rf_mod__mod__read__0_resp__dataLocal$IN_WRITE =
	     mod__mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal$OUT_READ ;
  assign mod__mod__f_rf_mod__mod__read__0_resp__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule mod__mod__f_rf_mod__mod__write__0_dataLocal
  assign mod__mod__f_rf_mod__mod__write__0_dataLocal$IN_WRITE =
	     { x__h3513, mod__mod__f_mod__enq__data__0_dataLocal$OUT_READ } ;
  assign mod__mod__f_rf_mod__mod__write__0_dataLocal$IN_EN_WRITE =
	     mod__mod__f_mod__enq__data__0_enLocal$OUT_READ ;

  // submodule mod__mod__f_rf_mod__mod__write__0_enLocal
  assign mod__mod__f_rf_mod__mod__write__0_enLocal$IN_EN_WRITE =
	     mod__mod__f_mod__enq__data__0_enLocal$OUT_READ ;

  // submodule mod__mod__f_rf_mod__rf_0_0_mod__read__0_req__dataLocal
  assign mod__mod__f_rf_mod__rf_0_0_mod__read__0_req__dataLocal$IN_WRITE =
	     mod__mod__f_rf_mod__mod__read__0_req__dataLocal$OUT_READ ;
  assign mod__mod__f_rf_mod__rf_0_0_mod__read__0_req__dataLocal$IN_EN_WRITE =
	     1'd1 ;

  // submodule mod__mod__f_rf_mod__rf_0_0_mod__read__0_req__enLocal
  assign mod__mod__f_rf_mod__rf_0_0_mod__read__0_req__enLocal$IN_EN_WRITE =
	     1'd1 ;

  // submodule mod__mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal
  assign mod__mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal$IN_WRITE =
	     mod__mod__f_rf_mod__rf_0_0_rf$READ_RESP_READ ;
  assign mod__mod__f_rf_mod__rf_0_0_mod__read__0_resp__dataLocal$IN_EN_WRITE =
	     1'd1 ;

  // submodule mod__mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal
  assign mod__mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal$IN_WRITE =
	     mod__mod__f_rf_mod__mod__write__0_dataLocal$OUT_READ ;
  assign mod__mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal$IN_EN_WRITE =
	     mod__mod__f_rf_mod__mod__write__0_enLocal$OUT_READ ;

  // submodule mod__mod__f_rf_mod__rf_0_0_mod__write__0_enLocal
  assign mod__mod__f_rf_mod__rf_0_0_mod__write__0_enLocal$IN_EN_WRITE =
	     mod__mod__f_rf_mod__mod__write__0_enLocal$OUT_READ ;

  // submodule mod__mod__f_rf_mod__rf_0_0_rf
  assign mod__mod__f_rf_mod__rf_0_0_rf$READ_REQ_WRITE =
	     mod__mod__f_rf_mod__rf_0_0_mod__read__0_req__dataLocal$OUT_READ ;
  assign mod__mod__f_rf_mod__rf_0_0_rf$WRITE_DATA_WRITE =
	     mod__mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal$OUT_READ[32:0] ;
  assign mod__mod__f_rf_mod__rf_0_0_rf$WRITE_INDEX_WRITE =
	     mod__mod__f_rf_mod__rf_0_0_mod__write__0_dataLocal$OUT_READ[34:33] ;
  assign mod__mod__f_rf_mod__rf_0_0_rf$WRITE_EN_WRITE =
	     mod__mod__f_rf_mod__rf_0_0_mod__write__0_enLocal$OUT_READ ;

  // submodule mod__mod__f_rf_mod__whichReg
  assign mod__mod__f_rf_mod__whichReg$IN_EN_WRITE = 1'd1 ;

  // submodule mod__mod__f_tail
  assign mod__mod__f_tail$IN_WRITE =
	     mod__mod__f_mod__clear__dataLocal$OUT_READ ?
	       2'd0 :
	       ((mod__mod__f_tail__read__1_PLUS_IF_mod__mod__f__ETC___d38 ==
		 2'd3) ?
		  mod__mod__f_tail__read__1_PLUS_IF_mod__mod__f__ETC___d38 -
		  2'd3 :
		  mod__mod__f_tail__read__1_PLUS_IF_mod__mod__f__ETC___d38) ;
  assign mod__mod__f_tail$IN_EN_WRITE = 1'd1 ;

  // submodule mod__mod__mod__deq__deq__dataLocal
  assign mod__mod__mod__deq__deq__dataLocal$IN_EN_WRITE = deq_deq_WRITE ;

  // submodule mod__mod__mod__deq__first__dataLocal
  assign mod__mod__mod__deq__first__dataLocal$IN_WRITE =
	     mod__mod__f_mod__deq__data__0_dataLocal$OUT_READ ;
  assign mod__mod__mod__deq__first__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule mod__mod__mod__deq__notEmpty__dataLocal
  assign mod__mod__mod__deq__notEmpty__dataLocal$IN_WRITE =
	     mod__mod__f_mod__deq__numFilledSlots__dataLocal$OUT_READ !=
	     2'd0 ;
  assign mod__mod__mod__deq__notEmpty__dataLocal$IN_EN_WRITE = 1'd1 ;

  // submodule mod__mod__mod__enq__enq__dataLocal
  assign mod__mod__mod__enq__enq__dataLocal$IN_WRITE = enq_enq_WRITE ;
  assign mod__mod__mod__enq__enq__dataLocal$IN_EN_WRITE = enq_enq_EN_WRITE ;

  // submodule mod__mod__mod__enq__enq__enLocal
  assign mod__mod__mod__enq__enq__enLocal$IN_EN_WRITE = enq_enq_EN_WRITE ;

  // submodule mod__mod__mod__enq__notFull__dataLocal
  assign mod__mod__mod__enq__notFull__dataLocal$IN_WRITE =
	     mod__mod__f_mod__enq__numFreeSlots__dataLocal$OUT_READ != 2'd0 ;
  assign mod__mod__mod__enq__notFull__dataLocal$IN_EN_WRITE = 1'd1 ;

  // remaining internal signals
  assign _theResult_____1__h5261 =
	     mod__mod__f_mod__deq__numDeqs__enLocal$OUT_READ ?
	       mod__mod__f_mod__deq__numDeqs__dataLocal$OUT_READ :
	       2'd0 ;
  assign mod__mod__f_head__read__2_PLUS_IF_mod__mod__f__ETC___d20 =
	     mod__mod__f_head$OUT_READ + v__h3290 ;
  assign mod__mod__f_tail__read__1_PLUS_IF_mod__mod__f__ETC___d38 =
	     mod__mod__f_tail$OUT_READ + _theResult_____1__h5261 ;
  assign v__h3290 =
	     mod__mod__f_mod__enq__data__0_enLocal$OUT_READ ? 2'd1 : 2'd0 ;
  assign x__h3513 =
	     (mod__mod__f_head$OUT_READ == 2'd3) ?
	       mod__mod__f_head$OUT_READ - 2'd3 :
	       mod__mod__f_head$OUT_READ ;
  assign x__h4421 = 2'd3 - mod__mod__f_numElems$OUT_READ ;
  assign y__h5678 = v__h3290 - _theResult_____1__h5261 ;
endmodule  // mkPcQ

